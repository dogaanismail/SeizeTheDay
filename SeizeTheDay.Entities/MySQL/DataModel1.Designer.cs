//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 5.07.2020 02:25:36
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CommentForumPost", "ForumPost", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.ForumPost), "ForumPostComments", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPostComment), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CreatedByComment", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ForumPostComments", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPostComment), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CreatedByForumTopic", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ForumTopics", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumTopic), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ForumForumTopic", "Forum", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.Forum), "ForumTopics", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumTopic), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "RequestFutureFriend", "User_FutureFriendID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "FriendRequests_FutureFriendID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.FriendRequest), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "RequestUser", "User_UserID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "FriendRequests_UserID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.FriendRequest), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CommentLikeComment", "ForumPostComment", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.ForumPostComment), "ForumCommentLikes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumCommentLike), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CommentUser", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ForumCommentLikes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumCommentLike), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserPortalMessage", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "PortalMessages", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.PortalMessage), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserCountry", "Country", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.Country), "UserInfoes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserInfoe), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserInsertBy", "User_InsertBy", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "UserInfoes_InsertBy", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserInfoe), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserModifiedBy", "User_LastModifiedBy", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "UserInfoes_LastModifiedBy", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserInfoe), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "User_Info", "User_Id", RelationshipMultiplicity.One, typeof(Xgteamc1XgTeamModel.User), "UserInfoe_Id", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.UserInfoe), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "User_Types", "UserType", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.UserType), "UserInfoes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserInfoe), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "FriendFutureFriend", "User_FutureFriendID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Friends_FutureFriendID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Friend), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserID", "User_UserID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Friends_UserID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Friend), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ChatBoxReceiver", "User_ReceiverID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ChatBoxes_ReceiverID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ChatBox), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ChatBoxSender", "User_SenderID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ChatBoxes_SenderID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ChatBox), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "PostLikeForum", "ForumPost", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.ForumPost), "ForumPostLikes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPostLike), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserPostLike", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ForumPostLikes", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPostLike), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ChatChatBox", "ChatBox", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.ChatBox), "Chats", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Chat), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ChatReceiver", "User_ReceiverID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Chats_ReceiverID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Chat), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ChatSender", "User_SenderID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Chats_SenderID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Chat), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CreatedByForum", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Fora", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Forum), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "CreatedByPost", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ForumPosts", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPost), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ForumPostForum", "Forum", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.Forum), "ForumPosts", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPost), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "ForumPostForumTopic", "ForumTopic", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.ForumTopic), "ForumPosts", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ForumPost), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "UserNotification", "User", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "Notifications", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.Notification), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "PermissionModule", "Module", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.Module), "UserPermissions", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserPermission), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "RoleModule", "Role", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.Role), "UserPermissions", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.UserPermission), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "VisitedID", "User_UserID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ProfileVisitors_UserID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ProfileVisitor), true)]
[assembly: EdmRelationshipAttribute("Xgteamc1XgTeamModel", "VisitorId", "User_VisitorID", RelationshipMultiplicity.ZeroOrOne, typeof(Xgteamc1XgTeamModel.User), "ProfileVisitors_VisitorID", RelationshipMultiplicity.Many, typeof(Xgteamc1XgTeamModel.ProfileVisitor), true)]

#endregion

namespace Xgteamc1XgTeamModel
{

    #region Xgteamc1XgTeamEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Xgteamc1XgTeamEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Xgteamc1XgTeamEntities object.
        /// </summary>
        public Xgteamc1XgTeamEntities() :
                base(@"name=Xgteamc1XgTeamEntities", "Xgteamc1XgTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Xgteamc1XgTeamEntities object using the connection string found in the 'Xgteamc1XgTeamEntities' section of the application configuration file.
        /// </summary>
        public Xgteamc1XgTeamEntities(string connectionString) :
                base(connectionString, "Xgteamc1XgTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Xgteamc1XgTeamEntities object.
        /// </summary>
        public Xgteamc1XgTeamEntities(EntityConnection connection) : base(connection, "Xgteamc1XgTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumPostComment> ForumPostComments
        {
            get
            {
                if ((_ForumPostComments == null))
                {
                    _ForumPostComments = base.CreateObjectSet<ForumPostComment>("ForumPostComments");
                }
                return _ForumPostComments;
            }
        }
        private ObjectSet<ForumPostComment> _ForumPostComments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumTopic> ForumTopics
        {
            get
            {
                if ((_ForumTopics == null))
                {
                    _ForumTopics = base.CreateObjectSet<ForumTopic>("ForumTopics");
                }
                return _ForumTopics;
            }
        }
        private ObjectSet<ForumTopic> _ForumTopics;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLogin> UserLogins
        {
            get
            {
                if ((_UserLogins == null))
                {
                    _UserLogins = base.CreateObjectSet<UserLogin>("UserLogins");
                }
                return _UserLogins;
            }
        }
        private ObjectSet<UserLogin> _UserLogins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FriendRequest> FriendRequests
        {
            get
            {
                if ((_FriendRequests == null))
                {
                    _FriendRequests = base.CreateObjectSet<FriendRequest>("FriendRequests");
                }
                return _FriendRequests;
            }
        }
        private ObjectSet<FriendRequest> _FriendRequests;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumCommentLike> ForumCommentLikes
        {
            get
            {
                if ((_ForumCommentLikes == null))
                {
                    _ForumCommentLikes = base.CreateObjectSet<ForumCommentLike>("ForumCommentLikes");
                }
                return _ForumCommentLikes;
            }
        }
        private ObjectSet<ForumCommentLike> _ForumCommentLikes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortalMessage> PortalMessages
        {
            get
            {
                if ((_PortalMessages == null))
                {
                    _PortalMessages = base.CreateObjectSet<PortalMessage>("PortalMessages");
                }
                return _PortalMessages;
            }
        }
        private ObjectSet<PortalMessage> _PortalMessages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInfoe> UserInfoes
        {
            get
            {
                if ((_UserInfoes == null))
                {
                    _UserInfoes = base.CreateObjectSet<UserInfoe>("UserInfoes");
                }
                return _UserInfoes;
            }
        }
        private ObjectSet<UserInfoe> _UserInfoes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserTypes
        {
            get
            {
                if ((_UserTypes == null))
                {
                    _UserTypes = base.CreateObjectSet<UserType>("UserTypes");
                }
                return _UserTypes;
            }
        }
        private ObjectSet<UserType> _UserTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatBox> ChatBoxes
        {
            get
            {
                if ((_ChatBoxes == null))
                {
                    _ChatBoxes = base.CreateObjectSet<ChatBox>("ChatBoxes");
                }
                return _ChatBoxes;
            }
        }
        private ObjectSet<ChatBox> _ChatBoxes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumPostLike> ForumPostLikes
        {
            get
            {
                if ((_ForumPostLikes == null))
                {
                    _ForumPostLikes = base.CreateObjectSet<ForumPostLike>("ForumPostLikes");
                }
                return _ForumPostLikes;
            }
        }
        private ObjectSet<ForumPostLike> _ForumPostLikes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Chat> Chats
        {
            get
            {
                if ((_Chats == null))
                {
                    _Chats = base.CreateObjectSet<Chat>("Chats");
                }
                return _Chats;
            }
        }
        private ObjectSet<Chat> _Chats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Forum> Fora
        {
            get
            {
                if ((_Fora == null))
                {
                    _Fora = base.CreateObjectSet<Forum>("Fora");
                }
                return _Fora;
            }
        }
        private ObjectSet<Forum> _Fora;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserClaim> UserClaims
        {
            get
            {
                if ((_UserClaims == null))
                {
                    _UserClaims = base.CreateObjectSet<UserClaim>("UserClaims");
                }
                return _UserClaims;
            }
        }
        private ObjectSet<UserClaim> _UserClaims;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumPost> ForumPosts
        {
            get
            {
                if ((_ForumPosts == null))
                {
                    _ForumPosts = base.CreateObjectSet<ForumPost>("ForumPosts");
                }
                return _ForumPosts;
            }
        }
        private ObjectSet<ForumPost> _ForumPosts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Module>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Module> _Modules;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notifications
        {
            get
            {
                if ((_Notifications == null))
                {
                    _Notifications = base.CreateObjectSet<Notification>("Notifications");
                }
                return _Notifications;
            }
        }
        private ObjectSet<Notification> _Notifications;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPermission> UserPermissions
        {
            get
            {
                if ((_UserPermissions == null))
                {
                    _UserPermissions = base.CreateObjectSet<UserPermission>("UserPermissions");
                }
                return _UserPermissions;
            }
        }
        private ObjectSet<UserPermission> _UserPermissions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProfileVisitor> ProfileVisitors
        {
            get
            {
                if ((_ProfileVisitors == null))
                {
                    _ProfileVisitors = base.CreateObjectSet<ProfileVisitor>("ProfileVisitors");
                }
                return _ProfileVisitors;
            }
        }
        private ObjectSet<ProfileVisitor> _ProfileVisitors;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the ForumPostComments EntitySet.
        /// </summary>
        public void AddToForumPostComments(ForumPostComment forumPostComment)
        {
            base.AddObject("ForumPostComments", forumPostComment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ForumTopics EntitySet.
        /// </summary>
        public void AddToForumTopics(ForumTopic forumTopic)
        {
            base.AddObject("ForumTopics", forumTopic);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserLogins EntitySet.
        /// </summary>
        public void AddToUserLogins(UserLogin userLogin)
        {
            base.AddObject("UserLogins", userLogin);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FriendRequests EntitySet.
        /// </summary>
        public void AddToFriendRequests(FriendRequest friendRequest)
        {
            base.AddObject("FriendRequests", friendRequest);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ForumCommentLikes EntitySet.
        /// </summary>
        public void AddToForumCommentLikes(ForumCommentLike forumCommentLike)
        {
            base.AddObject("ForumCommentLikes", forumCommentLike);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PortalMessages EntitySet.
        /// </summary>
        public void AddToPortalMessages(PortalMessage portalMessage)
        {
            base.AddObject("PortalMessages", portalMessage);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserInfoes EntitySet.
        /// </summary>
        public void AddToUserInfoes(UserInfoe userInfoe)
        {
            base.AddObject("UserInfoes", userInfoe);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypes EntitySet.
        /// </summary>
        public void AddToUserTypes(UserType userType)
        {
            base.AddObject("UserTypes", userType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Friends EntitySet.
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ChatBoxes EntitySet.
        /// </summary>
        public void AddToChatBoxes(ChatBox chatBox)
        {
            base.AddObject("ChatBoxes", chatBox);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ForumPostLikes EntitySet.
        /// </summary>
        public void AddToForumPostLikes(ForumPostLike forumPostLike)
        {
            base.AddObject("ForumPostLikes", forumPostLike);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Chats EntitySet.
        /// </summary>
        public void AddToChats(Chat chat)
        {
            base.AddObject("Chats", chat);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Fora EntitySet.
        /// </summary>
        public void AddToFora(Forum forum)
        {
            base.AddObject("Fora", forum);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserClaims EntitySet.
        /// </summary>
        public void AddToUserClaims(UserClaim userClaim)
        {
            base.AddObject("UserClaims", userClaim);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ForumPosts EntitySet.
        /// </summary>
        public void AddToForumPosts(ForumPost forumPost)
        {
            base.AddObject("ForumPosts", forumPost);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Modules EntitySet.
        /// </summary>
        public void AddToModules(Module module)
        {
            base.AddObject("Modules", module);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Notifications EntitySet.
        /// </summary>
        public void AddToNotifications(Notification notification)
        {
            base.AddObject("Notifications", notification);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserPermissions EntitySet.
        /// </summary>
        public void AddToUserPermissions(UserPermission userPermission)
        {
            base.AddObject("UserPermissions", userPermission);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProfileVisitors EntitySet.
        /// </summary>
        public void AddToProfileVisitors(ProfileVisitor profileVisitor)
        {
            base.AddObject("ProfileVisitors", profileVisitor);
        }

        #endregion
    }

    #endregion
}

namespace Xgteamc1XgTeamModel
{

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ForumPostComment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ForumPostCommentID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ForumPostComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumPostComment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ForumPostComment object.
        /// </summary>
        /// <param name="forumPostCommentID">Initial value of ForumPostCommentID.</param>
        public static ForumPostComment CreateForumPostComment(int forumPostCommentID)
        {
            ForumPostComment forumPostComment = new ForumPostComment();
            forumPostComment.ForumPostCommentID = forumPostCommentID;
            return forumPostComment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ForumPostCommentID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ForumPostCommentID
        {
            get
            {
                int value = _ForumPostCommentID;
                OnGetForumPostCommentID(ref value);
                return value;
            }
            set
            {
                if (_ForumPostCommentID != value)
                {
                  OnForumPostCommentIDChanging(ref value);
                  ReportPropertyChanging("ForumPostCommentID");
                  _ForumPostCommentID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumPostCommentID");
                  OnForumPostCommentIDChanged();
              }
            }
        }
        private int _ForumPostCommentID;
        partial void OnGetForumPostCommentID(ref int value);
        partial void OnForumPostCommentIDChanging(ref int value);
        partial void OnForumPostCommentIDChanged();
    
        /// <summary>
        /// There are no comments for Text in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Text
        {
            get
            {
                string value = _Text;
                OnGetText(ref value);
                return value;
            }
            set
            {
                if (_Text != value)
                {
                  OnTextChanging(ref value);
                  ReportPropertyChanging("Text");
                  _Text = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Text");
                  OnTextChanged();
              }
            }
        }
        private string _Text;
        partial void OnGetText(ref string value);
        partial void OnTextChanging(ref string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// There are no comments for CreatedTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedTime
        {
            get
            {
                global::System.DateTime? value = _CreatedTime;
                OnGetCreatedTime(ref value);
                return value;
            }
            set
            {
                if (_CreatedTime != value)
                {
                  OnCreatedTimeChanging(ref value);
                  ReportPropertyChanging("CreatedTime");
                  _CreatedTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedTime");
                  OnCreatedTimeChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedTime;
        partial void OnGetCreatedTime(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanging(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for ForumPostID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ForumPostID
        {
            get
            {
                int? value = _ForumPostID;
                OnGetForumPostID(ref value);
                return value;
            }
            set
            {
                if (_ForumPostID != value)
                {
                  OnForumPostIDChanging(ref value);
                  ReportPropertyChanging("ForumPostID");
                  _ForumPostID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumPostID");
                  OnForumPostIDChanged();
              }
            }
        }
        private int? _ForumPostID;
        partial void OnGetForumPostID(ref int? value);
        partial void OnForumPostIDChanging(ref int? value);
        partial void OnForumPostIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumPost in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentForumPost", "ForumPost")]
        public virtual ForumPost ForumPost
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPost").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPost in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForumPost> ForumPostReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPost");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ForumPost>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPost", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPost").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByComment", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByComment", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByComment", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByComment", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByComment", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByComment", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumCommentLikes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentLikeComment", "ForumCommentLikes")]
        public virtual EntityCollection<ForumCommentLike> ForumCommentLikes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumCommentLike>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumCommentLikes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumCommentLike>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumCommentLikes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ForumTopic in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ForumTopicID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ForumTopic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumTopic : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ForumTopic object.
        /// </summary>
        /// <param name="forumTopicID">Initial value of ForumTopicID.</param>
        public static ForumTopic CreateForumTopic(int forumTopicID)
        {
            ForumTopic forumTopic = new ForumTopic();
            forumTopic.ForumTopicID = forumTopicID;
            return forumTopic;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ForumTopicID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ForumTopicID
        {
            get
            {
                int value = _ForumTopicID;
                OnGetForumTopicID(ref value);
                return value;
            }
            set
            {
                if (_ForumTopicID != value)
                {
                  OnForumTopicIDChanging(ref value);
                  ReportPropertyChanging("ForumTopicID");
                  _ForumTopicID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumTopicID");
                  OnForumTopicIDChanged();
              }
            }
        }
        private int _ForumTopicID;
        partial void OnGetForumTopicID(ref int value);
        partial void OnForumTopicIDChanging(ref int value);
        partial void OnForumTopicIDChanged();
    
        /// <summary>
        /// There are no comments for ForumTopicName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumTopicName
        {
            get
            {
                string value = _ForumTopicName;
                OnGetForumTopicName(ref value);
                return value;
            }
            set
            {
                if (_ForumTopicName != value)
                {
                  OnForumTopicNameChanging(ref value);
                  ReportPropertyChanging("ForumTopicName");
                  _ForumTopicName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumTopicName");
                  OnForumTopicNameChanged();
              }
            }
        }
        private string _ForumTopicName;
        partial void OnGetForumTopicName(ref string value);
        partial void OnForumTopicNameChanging(ref string value);
        partial void OnForumTopicNameChanged();
    
        /// <summary>
        /// There are no comments for ForumTopicDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumTopicDescription
        {
            get
            {
                string value = _ForumTopicDescription;
                OnGetForumTopicDescription(ref value);
                return value;
            }
            set
            {
                if (_ForumTopicDescription != value)
                {
                  OnForumTopicDescriptionChanging(ref value);
                  ReportPropertyChanging("ForumTopicDescription");
                  _ForumTopicDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumTopicDescription");
                  OnForumTopicDescriptionChanged();
              }
            }
        }
        private string _ForumTopicDescription;
        partial void OnGetForumTopicDescription(ref string value);
        partial void OnForumTopicDescriptionChanging(ref string value);
        partial void OnForumTopicDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreatedTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedTime
        {
            get
            {
                global::System.DateTime? value = _CreatedTime;
                OnGetCreatedTime(ref value);
                return value;
            }
            set
            {
                if (_CreatedTime != value)
                {
                  OnCreatedTimeChanging(ref value);
                  ReportPropertyChanging("CreatedTime");
                  _CreatedTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedTime");
                  OnCreatedTimeChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedTime;
        partial void OnGetCreatedTime(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanging(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for ForumID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ForumID
        {
            get
            {
                int? value = _ForumID;
                OnGetForumID(ref value);
                return value;
            }
            set
            {
                if (_ForumID != value)
                {
                  OnForumIDChanging(ref value);
                  ReportPropertyChanging("ForumID");
                  _ForumID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumID");
                  OnForumIDChanged();
              }
            }
        }
        private int? _ForumID;
        partial void OnGetForumID(ref int? value);
        partial void OnForumIDChanging(ref int? value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// There are no comments for ForumTopicTitle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumTopicTitle
        {
            get
            {
                string value = _ForumTopicTitle;
                OnGetForumTopicTitle(ref value);
                return value;
            }
            set
            {
                if (_ForumTopicTitle != value)
                {
                  OnForumTopicTitleChanging(ref value);
                  ReportPropertyChanging("ForumTopicTitle");
                  _ForumTopicTitle = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumTopicTitle");
                  OnForumTopicTitleChanged();
              }
            }
        }
        private string _ForumTopicTitle;
        partial void OnGetForumTopicTitle(ref string value);
        partial void OnForumTopicTitleChanging(ref string value);
        partial void OnForumTopicTitleChanged();
    
        /// <summary>
        /// There are no comments for IsDefault in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDefault
        {
            get
            {
                bool? value = _IsDefault;
                OnGetIsDefault(ref value);
                return value;
            }
            set
            {
                if (_IsDefault != value)
                {
                  OnIsDefaultChanging(ref value);
                  ReportPropertyChanging("IsDefault");
                  _IsDefault = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDefault");
                  OnIsDefaultChanged();
              }
            }
        }
        private bool? _IsDefault;
        partial void OnGetIsDefault(ref bool? value);
        partial void OnIsDefaultChanging(ref bool? value);
        partial void OnIsDefaultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByForumTopic", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForumTopic", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForumTopic", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForumTopic", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForumTopic", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForumTopic", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Forum in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumForumTopic", "Forum")]
        public virtual Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumForumTopic", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumForumTopic", "Forum").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Forum in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumForumTopic", "Forum");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumForumTopic", "Forum", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumForumTopic", "Forum").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPosts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumPostForumTopic", "ForumPosts")]
        public virtual EntityCollection<ForumPost> ForumPosts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumPosts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserLogin in the schema.
    /// </summary>
    /// <KeyProperties>
    /// LoginProvider
    /// ProviderKey
    /// UserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLogin : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserLogin object.
        /// </summary>
        /// <param name="loginProvider">Initial value of LoginProvider.</param>
        /// <param name="providerKey">Initial value of ProviderKey.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static UserLogin CreateUserLogin(string loginProvider, string providerKey, string userId)
        {
            UserLogin userLogin = new UserLogin();
            userLogin.LoginProvider = loginProvider;
            userLogin.ProviderKey = providerKey;
            userLogin.UserId = userId;
            return userLogin;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for LoginProvider in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LoginProvider
        {
            get
            {
                string value = _LoginProvider;
                OnGetLoginProvider(ref value);
                return value;
            }
            set
            {
                if (_LoginProvider != value)
                {
                  OnLoginProviderChanging(ref value);
                  ReportPropertyChanging("LoginProvider");
                  _LoginProvider = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LoginProvider");
                  OnLoginProviderChanged();
              }
            }
        }
        private string _LoginProvider;
        partial void OnGetLoginProvider(ref string value);
        partial void OnLoginProviderChanging(ref string value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// There are no comments for ProviderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProviderKey
        {
            get
            {
                string value = _ProviderKey;
                OnGetProviderKey(ref value);
                return value;
            }
            set
            {
                if (_ProviderKey != value)
                {
                  OnProviderKeyChanging(ref value);
                  ReportPropertyChanging("ProviderKey");
                  _ProviderKey = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProviderKey");
                  OnProviderKeyChanged();
              }
            }
        }
        private string _ProviderKey;
        partial void OnGetProviderKey(ref string value);
        partial void OnProviderKeyChanging(ref string value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for IdentityUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IdentityUserId
        {
            get
            {
                string value = _IdentityUserId;
                OnGetIdentityUserId(ref value);
                return value;
            }
            set
            {
                if (_IdentityUserId != value)
                {
                  OnIdentityUserIdChanging(ref value);
                  ReportPropertyChanging("IdentityUserId");
                  _IdentityUserId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IdentityUserId");
                  OnIdentityUserIdChanged();
              }
            }
        }
        private string _IdentityUserId;
        partial void OnGetIdentityUserId(ref string value);
        partial void OnIdentityUserIdChanging(ref string value);
        partial void OnIdentityUserIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.FriendRequest in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FriendRequestID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="FriendRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FriendRequest : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new FriendRequest object.
        /// </summary>
        /// <param name="friendRequestID">Initial value of FriendRequestID.</param>
        public static FriendRequest CreateFriendRequest(int friendRequestID)
        {
            FriendRequest friendRequest = new FriendRequest();
            friendRequest.FriendRequestID = friendRequestID;
            return friendRequest;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FriendRequestID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FriendRequestID
        {
            get
            {
                int value = _FriendRequestID;
                OnGetFriendRequestID(ref value);
                return value;
            }
            set
            {
                if (_FriendRequestID != value)
                {
                  OnFriendRequestIDChanging(ref value);
                  ReportPropertyChanging("FriendRequestID");
                  _FriendRequestID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriendRequestID");
                  OnFriendRequestIDChanged();
              }
            }
        }
        private int _FriendRequestID;
        partial void OnGetFriendRequestID(ref int value);
        partial void OnFriendRequestIDChanging(ref int value);
        partial void OnFriendRequestIDChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for FutureFriendID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FutureFriendID
        {
            get
            {
                string value = _FutureFriendID;
                OnGetFutureFriendID(ref value);
                return value;
            }
            set
            {
                if (_FutureFriendID != value)
                {
                  OnFutureFriendIDChanging(ref value);
                  ReportPropertyChanging("FutureFriendID");
                  _FutureFriendID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FutureFriendID");
                  OnFutureFriendIDChanged();
              }
            }
        }
        private string _FutureFriendID;
        partial void OnGetFutureFriendID(ref string value);
        partial void OnFutureFriendIDChanging(ref string value);
        partial void OnFutureFriendIDChanged();
    
        /// <summary>
        /// There are no comments for Message in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Message
        {
            get
            {
                string value = _Message;
                OnGetMessage(ref value);
                return value;
            }
            set
            {
                if (_Message != value)
                {
                  OnMessageChanging(ref value);
                  ReportPropertyChanging("Message");
                  _Message = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Message");
                  OnMessageChanged();
              }
            }
        }
        private string _Message;
        partial void OnGetMessage(ref string value);
        partial void OnMessageChanging(ref string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// There are no comments for IsAccepted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsAccepted
        {
            get
            {
                bool? value = _IsAccepted;
                OnGetIsAccepted(ref value);
                return value;
            }
            set
            {
                if (_IsAccepted != value)
                {
                  OnIsAcceptedChanging(ref value);
                  ReportPropertyChanging("IsAccepted");
                  _IsAccepted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsAccepted");
                  OnIsAcceptedChanged();
              }
            }
        }
        private bool? _IsAccepted;
        partial void OnGetIsAccepted(ref bool? value);
        partial void OnIsAcceptedChanging(ref bool? value);
        partial void OnIsAcceptedChanged();
    
        /// <summary>
        /// There are no comments for IsPending in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsPending
        {
            get
            {
                bool? value = _IsPending;
                OnGetIsPending(ref value);
                return value;
            }
            set
            {
                if (_IsPending != value)
                {
                  OnIsPendingChanging(ref value);
                  ReportPropertyChanging("IsPending");
                  _IsPending = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsPending");
                  OnIsPendingChanged();
              }
            }
        }
        private bool? _IsPending;
        partial void OnGetIsPending(ref bool? value);
        partial void OnIsPendingChanging(ref bool? value);
        partial void OnIsPendingChanged();
    
        /// <summary>
        /// There are no comments for SendingDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SendingDate
        {
            get
            {
                global::System.DateTime? value = _SendingDate;
                OnGetSendingDate(ref value);
                return value;
            }
            set
            {
                if (_SendingDate != value)
                {
                  OnSendingDateChanging(ref value);
                  ReportPropertyChanging("SendingDate");
                  _SendingDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SendingDate");
                  OnSendingDateChanged();
              }
            }
        }
        private global::System.DateTime? _SendingDate;
        partial void OnGetSendingDate(ref global::System.DateTime? value);
        partial void OnSendingDateChanging(ref global::System.DateTime? value);
        partial void OnSendingDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_FutureFriendID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RequestFutureFriend", "User_FutureFriendID")]
        public virtual User User_FutureFriendID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestFutureFriend", "User_FutureFriendID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestFutureFriend", "User_FutureFriendID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_FutureFriendID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_FutureFriendIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestFutureFriend", "User_FutureFriendID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.RequestFutureFriend", "User_FutureFriendID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestFutureFriend", "User_FutureFriendID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RequestUser", "User_UserID")]
        public virtual User User_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestUser", "User_UserID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestUser", "User_UserID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_UserIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestUser", "User_UserID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.RequestUser", "User_UserID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.RequestUser", "User_UserID").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ForumCommentLike in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CommentLikeID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ForumCommentLike")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumCommentLike : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ForumCommentLike object.
        /// </summary>
        /// <param name="commentLikeID">Initial value of CommentLikeID.</param>
        public static ForumCommentLike CreateForumCommentLike(int commentLikeID)
        {
            ForumCommentLike forumCommentLike = new ForumCommentLike();
            forumCommentLike.CommentLikeID = commentLikeID;
            return forumCommentLike;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CommentLikeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CommentLikeID
        {
            get
            {
                int value = _CommentLikeID;
                OnGetCommentLikeID(ref value);
                return value;
            }
            set
            {
                if (_CommentLikeID != value)
                {
                  OnCommentLikeIDChanging(ref value);
                  ReportPropertyChanging("CommentLikeID");
                  _CommentLikeID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommentLikeID");
                  OnCommentLikeIDChanged();
              }
            }
        }
        private int _CommentLikeID;
        partial void OnGetCommentLikeID(ref int value);
        partial void OnCommentLikeIDChanging(ref int value);
        partial void OnCommentLikeIDChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for CommentID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommentID
        {
            get
            {
                int? value = _CommentID;
                OnGetCommentID(ref value);
                return value;
            }
            set
            {
                if (_CommentID != value)
                {
                  OnCommentIDChanging(ref value);
                  ReportPropertyChanging("CommentID");
                  _CommentID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommentID");
                  OnCommentIDChanged();
              }
            }
        }
        private int? _CommentID;
        partial void OnGetCommentID(ref int? value);
        partial void OnCommentIDChanging(ref int? value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// There are no comments for LikedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LikedDate
        {
            get
            {
                global::System.DateTime? value = _LikedDate;
                OnGetLikedDate(ref value);
                return value;
            }
            set
            {
                if (_LikedDate != value)
                {
                  OnLikedDateChanging(ref value);
                  ReportPropertyChanging("LikedDate");
                  _LikedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LikedDate");
                  OnLikedDateChanged();
              }
            }
        }
        private global::System.DateTime? _LikedDate;
        partial void OnGetLikedDate(ref global::System.DateTime? value);
        partial void OnLikedDateChanging(ref global::System.DateTime? value);
        partial void OnLikedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumPostComment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentLikeComment", "ForumPostComment")]
        public virtual ForumPostComment ForumPostComment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPostComment>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumPostComment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPostComment>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumPostComment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPostComment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForumPostComment> ForumPostCommentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPostComment>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumPostComment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ForumPostComment>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumPostComment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPostComment>("Xgteamc1XgTeamModel.CommentLikeComment", "ForumPostComment").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentUser", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CommentUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CommentUser", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CommentUser", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.CommentUser", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CommentUser", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.PortalMessage in the schema.
    /// </summary>
    /// <KeyProperties>
    /// MessageID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="PortalMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortalMessage : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PortalMessage object.
        /// </summary>
        /// <param name="messageID">Initial value of MessageID.</param>
        public static PortalMessage CreatePortalMessage(int messageID)
        {
            PortalMessage portalMessage = new PortalMessage();
            portalMessage.MessageID = messageID;
            return portalMessage;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for MessageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int MessageID
        {
            get
            {
                int value = _MessageID;
                OnGetMessageID(ref value);
                return value;
            }
            set
            {
                if (_MessageID != value)
                {
                  OnMessageIDChanging(ref value);
                  ReportPropertyChanging("MessageID");
                  _MessageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MessageID");
                  OnMessageIDChanged();
              }
            }
        }
        private int _MessageID;
        partial void OnGetMessageID(ref int value);
        partial void OnMessageIDChanging(ref int value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// There are no comments for PortalMessageUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PortalMessageUserID
        {
            get
            {
                string value = _PortalMessageUserID;
                OnGetPortalMessageUserID(ref value);
                return value;
            }
            set
            {
                if (_PortalMessageUserID != value)
                {
                  OnPortalMessageUserIDChanging(ref value);
                  ReportPropertyChanging("PortalMessageUserID");
                  _PortalMessageUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PortalMessageUserID");
                  OnPortalMessageUserIDChanged();
              }
            }
        }
        private string _PortalMessageUserID;
        partial void OnGetPortalMessageUserID(ref string value);
        partial void OnPortalMessageUserIDChanging(ref string value);
        partial void OnPortalMessageUserIDChanged();
    
        /// <summary>
        /// There are no comments for TextMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TextMessage
        {
            get
            {
                string value = _TextMessage;
                OnGetTextMessage(ref value);
                return value;
            }
            set
            {
                if (_TextMessage != value)
                {
                  OnTextMessageChanging(ref value);
                  ReportPropertyChanging("TextMessage");
                  _TextMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TextMessage");
                  OnTextMessageChanged();
              }
            }
        }
        private string _TextMessage;
        partial void OnGetTextMessage(ref string value);
        partial void OnTextMessageChanging(ref string value);
        partial void OnTextMessageChanged();
    
        /// <summary>
        /// There are no comments for SendDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SendDate
        {
            get
            {
                global::System.DateTime? value = _SendDate;
                OnGetSendDate(ref value);
                return value;
            }
            set
            {
                if (_SendDate != value)
                {
                  OnSendDateChanging(ref value);
                  ReportPropertyChanging("SendDate");
                  _SendDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SendDate");
                  OnSendDateChanged();
              }
            }
        }
        private global::System.DateTime? _SendDate;
        partial void OnGetSendDate(ref global::System.DateTime? value);
        partial void OnSendDateChanging(ref global::System.DateTime? value);
        partial void OnSendDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserPortalMessage", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPortalMessage", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPortalMessage", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPortalMessage", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserPortalMessage", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPortalMessage", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserInfoe in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserInfoe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfoe : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserInfoe object.
        /// </summary>
        /// <param name="ıd">Initial value of Id.</param>
        public static UserInfoe CreateUserInfoe(string ıd)
        {
            UserInfoe userInfoe = new UserInfoe();
            userInfoe.Id = ıd;
            return userInfoe;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// There are no comments for BirthDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? BirthDate
        {
            get
            {
                global::System.DateTime? value = _BirthDate;
                OnGetBirthDate(ref value);
                return value;
            }
            set
            {
                if (_BirthDate != value)
                {
                  OnBirthDateChanging(ref value);
                  ReportPropertyChanging("BirthDate");
                  _BirthDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BirthDate");
                  OnBirthDateChanged();
              }
            }
        }
        private global::System.DateTime? _BirthDate;
        partial void OnGetBirthDate(ref global::System.DateTime? value);
        partial void OnBirthDateChanging(ref global::System.DateTime? value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for PhotoPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhotoPath
        {
            get
            {
                string value = _PhotoPath;
                OnGetPhotoPath(ref value);
                return value;
            }
            set
            {
                if (_PhotoPath != value)
                {
                  OnPhotoPathChanging(ref value);
                  ReportPropertyChanging("PhotoPath");
                  _PhotoPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhotoPath");
                  OnPhotoPathChanged();
              }
            }
        }
        private string _PhotoPath;
        partial void OnGetPhotoPath(ref string value);
        partial void OnPhotoPathChanging(ref string value);
        partial void OnPhotoPathChanged();
    
        /// <summary>
        /// There are no comments for FacebookLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FacebookLink
        {
            get
            {
                string value = _FacebookLink;
                OnGetFacebookLink(ref value);
                return value;
            }
            set
            {
                if (_FacebookLink != value)
                {
                  OnFacebookLinkChanging(ref value);
                  ReportPropertyChanging("FacebookLink");
                  _FacebookLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FacebookLink");
                  OnFacebookLinkChanged();
              }
            }
        }
        private string _FacebookLink;
        partial void OnGetFacebookLink(ref string value);
        partial void OnFacebookLinkChanging(ref string value);
        partial void OnFacebookLinkChanged();
    
        /// <summary>
        /// There are no comments for TwitterLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TwitterLink
        {
            get
            {
                string value = _TwitterLink;
                OnGetTwitterLink(ref value);
                return value;
            }
            set
            {
                if (_TwitterLink != value)
                {
                  OnTwitterLinkChanging(ref value);
                  ReportPropertyChanging("TwitterLink");
                  _TwitterLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TwitterLink");
                  OnTwitterLinkChanged();
              }
            }
        }
        private string _TwitterLink;
        partial void OnGetTwitterLink(ref string value);
        partial void OnTwitterLinkChanging(ref string value);
        partial void OnTwitterLinkChanged();
    
        /// <summary>
        /// There are no comments for SkypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SkypeID
        {
            get
            {
                string value = _SkypeID;
                OnGetSkypeID(ref value);
                return value;
            }
            set
            {
                if (_SkypeID != value)
                {
                  OnSkypeIDChanging(ref value);
                  ReportPropertyChanging("SkypeID");
                  _SkypeID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SkypeID");
                  OnSkypeIDChanged();
              }
            }
        }
        private string _SkypeID;
        partial void OnGetSkypeID(ref string value);
        partial void OnSkypeIDChanging(ref string value);
        partial void OnSkypeIDChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for IsDefault in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDefault
        {
            get
            {
                bool? value = _IsDefault;
                OnGetIsDefault(ref value);
                return value;
            }
            set
            {
                if (_IsDefault != value)
                {
                  OnIsDefaultChanging(ref value);
                  ReportPropertyChanging("IsDefault");
                  _IsDefault = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDefault");
                  OnIsDefaultChanged();
              }
            }
        }
        private bool? _IsDefault;
        partial void OnGetIsDefault(ref bool? value);
        partial void OnIsDefaultChanging(ref bool? value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// There are no comments for LastLoginDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastLoginDate
        {
            get
            {
                global::System.DateTime? value = _LastLoginDate;
                OnGetLastLoginDate(ref value);
                return value;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                  OnLastLoginDateChanging(ref value);
                  ReportPropertyChanging("LastLoginDate");
                  _LastLoginDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastLoginDate");
                  OnLastLoginDateChanged();
              }
            }
        }
        private global::System.DateTime? _LastLoginDate;
        partial void OnGetLastLoginDate(ref global::System.DateTime? value);
        partial void OnLastLoginDateChanging(ref global::System.DateTime? value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// There are no comments for RegisteredDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? RegisteredDate
        {
            get
            {
                global::System.DateTime? value = _RegisteredDate;
                OnGetRegisteredDate(ref value);
                return value;
            }
            set
            {
                if (_RegisteredDate != value)
                {
                  OnRegisteredDateChanging(ref value);
                  ReportPropertyChanging("RegisteredDate");
                  _RegisteredDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RegisteredDate");
                  OnRegisteredDateChanged();
              }
            }
        }
        private global::System.DateTime? _RegisteredDate;
        partial void OnGetRegisteredDate(ref global::System.DateTime? value);
        partial void OnRegisteredDateChanging(ref global::System.DateTime? value);
        partial void OnRegisteredDateChanged();
    
        /// <summary>
        /// There are no comments for InsertBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InsertBy
        {
            get
            {
                string value = _InsertBy;
                OnGetInsertBy(ref value);
                return value;
            }
            set
            {
                if (_InsertBy != value)
                {
                  OnInsertByChanging(ref value);
                  ReportPropertyChanging("InsertBy");
                  _InsertBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InsertBy");
                  OnInsertByChanged();
              }
            }
        }
        private string _InsertBy;
        partial void OnGetInsertBy(ref string value);
        partial void OnInsertByChanging(ref string value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// There are no comments for LastModified in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastModified
        {
            get
            {
                global::System.DateTime? value = _LastModified;
                OnGetLastModified(ref value);
                return value;
            }
            set
            {
                if (_LastModified != value)
                {
                  OnLastModifiedChanging(ref value);
                  ReportPropertyChanging("LastModified");
                  _LastModified = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastModified");
                  OnLastModifiedChanged();
              }
            }
        }
        private global::System.DateTime? _LastModified;
        partial void OnGetLastModified(ref global::System.DateTime? value);
        partial void OnLastModifiedChanging(ref global::System.DateTime? value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// There are no comments for LastModifiedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LastModifiedBy
        {
            get
            {
                string value = _LastModifiedBy;
                OnGetLastModifiedBy(ref value);
                return value;
            }
            set
            {
                if (_LastModifiedBy != value)
                {
                  OnLastModifiedByChanging(ref value);
                  ReportPropertyChanging("LastModifiedBy");
                  _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LastModifiedBy");
                  OnLastModifiedByChanged();
              }
            }
        }
        private string _LastModifiedBy;
        partial void OnGetLastModifiedBy(ref string value);
        partial void OnLastModifiedByChanging(ref string value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// There are no comments for CoverPhotoPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CoverPhotoPath
        {
            get
            {
                string value = _CoverPhotoPath;
                OnGetCoverPhotoPath(ref value);
                return value;
            }
            set
            {
                if (_CoverPhotoPath != value)
                {
                  OnCoverPhotoPathChanging(ref value);
                  ReportPropertyChanging("CoverPhotoPath");
                  _CoverPhotoPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CoverPhotoPath");
                  OnCoverPhotoPathChanged();
              }
            }
        }
        private string _CoverPhotoPath;
        partial void OnGetCoverPhotoPath(ref string value);
        partial void OnCoverPhotoPathChanging(ref string value);
        partial void OnCoverPhotoPathChanged();
    
        /// <summary>
        /// There are no comments for UserCity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserCity
        {
            get
            {
                string value = _UserCity;
                OnGetUserCity(ref value);
                return value;
            }
            set
            {
                if (_UserCity != value)
                {
                  OnUserCityChanging(ref value);
                  ReportPropertyChanging("UserCity");
                  _UserCity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserCity");
                  OnUserCityChanged();
              }
            }
        }
        private string _UserCity;
        partial void OnGetUserCity(ref string value);
        partial void OnUserCityChanging(ref string value);
        partial void OnUserCityChanged();
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CountryID
        {
            get
            {
                int? value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private int? _CountryID;
        partial void OnGetCountryID(ref int? value);
        partial void OnCountryIDChanging(ref int? value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for UserTypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UserTypeID
        {
            get
            {
                int? value = _UserTypeID;
                OnGetUserTypeID(ref value);
                return value;
            }
            set
            {
                if (_UserTypeID != value)
                {
                  OnUserTypeIDChanging(ref value);
                  ReportPropertyChanging("UserTypeID");
                  _UserTypeID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserTypeID");
                  OnUserTypeIDChanged();
              }
            }
        }
        private int? _UserTypeID;
        partial void OnGetUserTypeID(ref int? value);
        partial void OnUserTypeIDChanging(ref int? value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// There are no comments for UserTask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserTask
        {
            get
            {
                string value = _UserTask;
                OnGetUserTask(ref value);
                return value;
            }
            set
            {
                if (_UserTask != value)
                {
                  OnUserTaskChanging(ref value);
                  ReportPropertyChanging("UserTask");
                  _UserTask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserTask");
                  OnUserTaskChanged();
              }
            }
        }
        private string _UserTask;
        partial void OnGetUserTask(ref string value);
        partial void OnUserTaskChanging(ref string value);
        partial void OnUserTaskChanged();
    
        /// <summary>
        /// There are no comments for TagUserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TagUserName
        {
            get
            {
                string value = _TagUserName;
                OnGetTagUserName(ref value);
                return value;
            }
            set
            {
                if (_TagUserName != value)
                {
                  OnTagUserNameChanging(ref value);
                  ReportPropertyChanging("TagUserName");
                  _TagUserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TagUserName");
                  OnTagUserNameChanged();
              }
            }
        }
        private string _TagUserName;
        partial void OnGetTagUserName(ref string value);
        partial void OnTagUserNameChanging(ref string value);
        partial void OnTagUserNameChanged();
    
        /// <summary>
        /// There are no comments for TagColor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TagColor
        {
            get
            {
                string value = _TagColor;
                OnGetTagColor(ref value);
                return value;
            }
            set
            {
                if (_TagColor != value)
                {
                  OnTagColorChanging(ref value);
                  ReportPropertyChanging("TagColor");
                  _TagColor = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TagColor");
                  OnTagColorChanged();
              }
            }
        }
        private string _TagColor;
        partial void OnGetTagColor(ref string value);
        partial void OnTagColorChanging(ref string value);
        partial void OnTagColorChanged();
    
        /// <summary>
        /// There are no comments for IsActive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsActive
        {
            get
            {
                bool? value = _IsActive;
                OnGetIsActive(ref value);
                return value;
            }
            set
            {
                if (_IsActive != value)
                {
                  OnIsActiveChanging(ref value);
                  ReportPropertyChanging("IsActive");
                  _IsActive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsActive");
                  OnIsActiveChanged();
              }
            }
        }
        private bool? _IsActive;
        partial void OnGetIsActive(ref bool? value);
        partial void OnIsActiveChanging(ref bool? value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserCountry", "Country")]
        public virtual Country Country
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Xgteamc1XgTeamModel.UserCountry", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Xgteamc1XgTeamModel.UserCountry", "Country").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Xgteamc1XgTeamModel.UserCountry", "Country");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Country>("Xgteamc1XgTeamModel.UserCountry", "Country", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Xgteamc1XgTeamModel.UserCountry", "Country").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_InsertBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserInsertBy", "User_InsertBy")]
        public virtual User User_InsertBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserInsertBy", "User_InsertBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserInsertBy", "User_InsertBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_InsertBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_InsertByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserInsertBy", "User_InsertBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserInsertBy", "User_InsertBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserInsertBy", "User_InsertBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_LastModifiedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserModifiedBy", "User_LastModifiedBy")]
        public virtual User User_LastModifiedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserModifiedBy", "User_LastModifiedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserModifiedBy", "User_LastModifiedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_LastModifiedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_LastModifiedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserModifiedBy", "User_LastModifiedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserModifiedBy", "User_LastModifiedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserModifiedBy", "User_LastModifiedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_Id in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "User_Info", "User_Id")]
        public virtual User User_Id
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.User_Info", "User_Id").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.User_Info", "User_Id").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_Id in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_IdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.User_Info", "User_Id");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.User_Info", "User_Id", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.User_Info", "User_Id").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserType in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "User_Types", "UserType")]
        public virtual UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserType>("Xgteamc1XgTeamModel.User_Types", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserType>("Xgteamc1XgTeamModel.User_Types", "UserType").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UserType in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserType>("Xgteamc1XgTeamModel.User_Types", "UserType");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UserType>("Xgteamc1XgTeamModel.User_Types", "UserType", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserType>("Xgteamc1XgTeamModel.User_Types", "UserType").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UserTypeID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="userTypeID">Initial value of UserTypeID.</param>
        public static UserType CreateUserType(int userTypeID)
        {
            UserType userType = new UserType();
            userType.UserTypeID = userTypeID;
            return userType;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UserTypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UserTypeID
        {
            get
            {
                int value = _UserTypeID;
                OnGetUserTypeID(ref value);
                return value;
            }
            set
            {
                if (_UserTypeID != value)
                {
                  OnUserTypeIDChanging(ref value);
                  ReportPropertyChanging("UserTypeID");
                  _UserTypeID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserTypeID");
                  OnUserTypeIDChanged();
              }
            }
        }
        private int _UserTypeID;
        partial void OnGetUserTypeID(ref int value);
        partial void OnUserTypeIDChanging(ref int value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// There are no comments for UserTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserTypeName
        {
            get
            {
                string value = _UserTypeName;
                OnGetUserTypeName(ref value);
                return value;
            }
            set
            {
                if (_UserTypeName != value)
                {
                  OnUserTypeNameChanging(ref value);
                  ReportPropertyChanging("UserTypeName");
                  _UserTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserTypeName");
                  OnUserTypeNameChanged();
              }
            }
        }
        private string _UserTypeName;
        partial void OnGetUserTypeName(ref string value);
        partial void OnUserTypeNameChanging(ref string value);
        partial void OnUserTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserInfoes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "User_Types", "UserInfoes")]
        public virtual EntityCollection<UserInfoe> UserInfoes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.User_Types", "UserInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.User_Types", "UserInfoes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Friend in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FriendID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Friend object.
        /// </summary>
        /// <param name="friendID">Initial value of FriendID.</param>
        public static Friend CreateFriend(int friendID)
        {
            Friend friend = new Friend();
            friend.FriendID = friendID;
            return friend;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FriendID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FriendID
        {
            get
            {
                int value = _FriendID;
                OnGetFriendID(ref value);
                return value;
            }
            set
            {
                if (_FriendID != value)
                {
                  OnFriendIDChanging(ref value);
                  ReportPropertyChanging("FriendID");
                  _FriendID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriendID");
                  OnFriendIDChanged();
              }
            }
        }
        private int _FriendID;
        partial void OnGetFriendID(ref int value);
        partial void OnFriendIDChanging(ref int value);
        partial void OnFriendIDChanged();
    
        /// <summary>
        /// There are no comments for FutureFriendID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FutureFriendID
        {
            get
            {
                string value = _FutureFriendID;
                OnGetFutureFriendID(ref value);
                return value;
            }
            set
            {
                if (_FutureFriendID != value)
                {
                  OnFutureFriendIDChanging(ref value);
                  ReportPropertyChanging("FutureFriendID");
                  _FutureFriendID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FutureFriendID");
                  OnFutureFriendIDChanged();
              }
            }
        }
        private string _FutureFriendID;
        partial void OnGetFutureFriendID(ref string value);
        partial void OnFutureFriendIDChanging(ref string value);
        partial void OnFutureFriendIDChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for BecameFriendDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? BecameFriendDate
        {
            get
            {
                global::System.DateTime? value = _BecameFriendDate;
                OnGetBecameFriendDate(ref value);
                return value;
            }
            set
            {
                if (_BecameFriendDate != value)
                {
                  OnBecameFriendDateChanging(ref value);
                  ReportPropertyChanging("BecameFriendDate");
                  _BecameFriendDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BecameFriendDate");
                  OnBecameFriendDateChanged();
              }
            }
        }
        private global::System.DateTime? _BecameFriendDate;
        partial void OnGetBecameFriendDate(ref global::System.DateTime? value);
        partial void OnBecameFriendDateChanging(ref global::System.DateTime? value);
        partial void OnBecameFriendDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_FutureFriendID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "FriendFutureFriend", "User_FutureFriendID")]
        public virtual User User_FutureFriendID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.FriendFutureFriend", "User_FutureFriendID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.FriendFutureFriend", "User_FutureFriendID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_FutureFriendID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_FutureFriendIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.FriendFutureFriend", "User_FutureFriendID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.FriendFutureFriend", "User_FutureFriendID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.FriendFutureFriend", "User_FutureFriendID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserID", "User_UserID")]
        public virtual User User_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserID", "User_UserID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserID", "User_UserID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_UserIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserID", "User_UserID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserID", "User_UserID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserID", "User_UserID").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Setting in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SettingId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="settingId">Initial value of SettingId.</param>
        public static Setting CreateSetting(int settingId)
        {
            Setting setting = new Setting();
            setting.SettingId = settingId;
            return setting;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SettingId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SettingId
        {
            get
            {
                int value = _SettingId;
                OnGetSettingId(ref value);
                return value;
            }
            set
            {
                if (_SettingId != value)
                {
                  OnSettingIdChanging(ref value);
                  ReportPropertyChanging("SettingId");
                  _SettingId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SettingId");
                  OnSettingIdChanged();
              }
            }
        }
        private int _SettingId;
        partial void OnGetSettingId(ref int value);
        partial void OnSettingIdChanging(ref int value);
        partial void OnSettingIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ChatBox in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ChatboxID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ChatBox")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatBox : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ChatBox object.
        /// </summary>
        /// <param name="chatboxID">Initial value of ChatboxID.</param>
        public static ChatBox CreateChatBox(int chatboxID)
        {
            ChatBox chatBox = new ChatBox();
            chatBox.ChatboxID = chatboxID;
            return chatBox;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ChatboxID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ChatboxID
        {
            get
            {
                int value = _ChatboxID;
                OnGetChatboxID(ref value);
                return value;
            }
            set
            {
                if (_ChatboxID != value)
                {
                  OnChatboxIDChanging(ref value);
                  ReportPropertyChanging("ChatboxID");
                  _ChatboxID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChatboxID");
                  OnChatboxIDChanged();
              }
            }
        }
        private int _ChatboxID;
        partial void OnGetChatboxID(ref int value);
        partial void OnChatboxIDChanging(ref int value);
        partial void OnChatboxIDChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for SenderID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SenderID
        {
            get
            {
                string value = _SenderID;
                OnGetSenderID(ref value);
                return value;
            }
            set
            {
                if (_SenderID != value)
                {
                  OnSenderIDChanging(ref value);
                  ReportPropertyChanging("SenderID");
                  _SenderID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SenderID");
                  OnSenderIDChanged();
              }
            }
        }
        private string _SenderID;
        partial void OnGetSenderID(ref string value);
        partial void OnSenderIDChanging(ref string value);
        partial void OnSenderIDChanged();
    
        /// <summary>
        /// There are no comments for CreatedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedDate
        {
            get
            {
                global::System.DateTime? value = _CreatedDate;
                OnGetCreatedDate(ref value);
                return value;
            }
            set
            {
                if (_CreatedDate != value)
                {
                  OnCreatedDateChanging(ref value);
                  ReportPropertyChanging("CreatedDate");
                  _CreatedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedDate");
                  OnCreatedDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedDate;
        partial void OnGetCreatedDate(ref global::System.DateTime? value);
        partial void OnCreatedDateChanging(ref global::System.DateTime? value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// There are no comments for ReceiverID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ReceiverID
        {
            get
            {
                string value = _ReceiverID;
                OnGetReceiverID(ref value);
                return value;
            }
            set
            {
                if (_ReceiverID != value)
                {
                  OnReceiverIDChanging(ref value);
                  ReportPropertyChanging("ReceiverID");
                  _ReceiverID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ReceiverID");
                  OnReceiverIDChanged();
              }
            }
        }
        private string _ReceiverID;
        partial void OnGetReceiverID(ref string value);
        partial void OnReceiverIDChanging(ref string value);
        partial void OnReceiverIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_ReceiverID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatBoxReceiver", "User_ReceiverID")]
        public virtual User User_ReceiverID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxReceiver", "User_ReceiverID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxReceiver", "User_ReceiverID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_ReceiverID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_ReceiverIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxReceiver", "User_ReceiverID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxReceiver", "User_ReceiverID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxReceiver", "User_ReceiverID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_SenderID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatBoxSender", "User_SenderID")]
        public virtual User User_SenderID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxSender", "User_SenderID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxSender", "User_SenderID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_SenderID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_SenderIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxSender", "User_SenderID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxSender", "User_SenderID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatBoxSender", "User_SenderID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Chats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatChatBox", "Chats")]
        public virtual EntityCollection<Chat> Chats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatChatBox", "Chats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatChatBox", "Chats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Country in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CountryID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of CountryID.</param>
        public static Country CreateCountry(int countryID)
        {
            Country country = new Country();
            country.CountryID = countryID;
            return country;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CountryID
        {
            get
            {
                int value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private int _CountryID;
        partial void OnGetCountryID(ref int value);
        partial void OnCountryIDChanging(ref int value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for CountryName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CountryName
        {
            get
            {
                string value = _CountryName;
                OnGetCountryName(ref value);
                return value;
            }
            set
            {
                if (_CountryName != value)
                {
                  OnCountryNameChanging(ref value);
                  ReportPropertyChanging("CountryName");
                  _CountryName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CountryName");
                  OnCountryNameChanged();
              }
            }
        }
        private string _CountryName;
        partial void OnGetCountryName(ref string value);
        partial void OnCountryNameChanging(ref string value);
        partial void OnCountryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserInfoes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserCountry", "UserInfoes")]
        public virtual EntityCollection<UserInfoe> UserInfoes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserCountry", "UserInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserCountry", "UserInfoes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ForumPostLike in the schema.
    /// </summary>
    /// <KeyProperties>
    /// LikeID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ForumPostLike")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumPostLike : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ForumPostLike object.
        /// </summary>
        /// <param name="likeID">Initial value of LikeID.</param>
        public static ForumPostLike CreateForumPostLike(int likeID)
        {
            ForumPostLike forumPostLike = new ForumPostLike();
            forumPostLike.LikeID = likeID;
            return forumPostLike;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for LikeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LikeID
        {
            get
            {
                int value = _LikeID;
                OnGetLikeID(ref value);
                return value;
            }
            set
            {
                if (_LikeID != value)
                {
                  OnLikeIDChanging(ref value);
                  ReportPropertyChanging("LikeID");
                  _LikeID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LikeID");
                  OnLikeIDChanged();
              }
            }
        }
        private int _LikeID;
        partial void OnGetLikeID(ref int value);
        partial void OnLikeIDChanging(ref int value);
        partial void OnLikeIDChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for PostID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PostID
        {
            get
            {
                int? value = _PostID;
                OnGetPostID(ref value);
                return value;
            }
            set
            {
                if (_PostID != value)
                {
                  OnPostIDChanging(ref value);
                  ReportPropertyChanging("PostID");
                  _PostID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostID");
                  OnPostIDChanged();
              }
            }
        }
        private int? _PostID;
        partial void OnGetPostID(ref int? value);
        partial void OnPostIDChanging(ref int? value);
        partial void OnPostIDChanged();
    
        /// <summary>
        /// There are no comments for LikedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LikedDate
        {
            get
            {
                global::System.DateTime? value = _LikedDate;
                OnGetLikedDate(ref value);
                return value;
            }
            set
            {
                if (_LikedDate != value)
                {
                  OnLikedDateChanging(ref value);
                  ReportPropertyChanging("LikedDate");
                  _LikedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LikedDate");
                  OnLikedDateChanged();
              }
            }
        }
        private global::System.DateTime? _LikedDate;
        partial void OnGetLikedDate(ref global::System.DateTime? value);
        partial void OnLikedDateChanging(ref global::System.DateTime? value);
        partial void OnLikedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumPost in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "PostLikeForum", "ForumPost")]
        public virtual ForumPost ForumPost
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPost").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPost in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForumPost> ForumPostReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPost");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ForumPost>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPost", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumPost>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPost").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserPostLike", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPostLike", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPostLike", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPostLike", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserPostLike", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserPostLike", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Chat in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ChatID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Chat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Chat : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Chat object.
        /// </summary>
        /// <param name="chatID">Initial value of ChatID.</param>
        public static Chat CreateChat(int chatID)
        {
            Chat chat = new Chat();
            chat.ChatID = chatID;
            return chat;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ChatID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ChatID
        {
            get
            {
                int value = _ChatID;
                OnGetChatID(ref value);
                return value;
            }
            set
            {
                if (_ChatID != value)
                {
                  OnChatIDChanging(ref value);
                  ReportPropertyChanging("ChatID");
                  _ChatID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChatID");
                  OnChatIDChanged();
              }
            }
        }
        private int _ChatID;
        partial void OnGetChatID(ref int value);
        partial void OnChatIDChanging(ref int value);
        partial void OnChatIDChanged();
    
        /// <summary>
        /// There are no comments for Text in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Text
        {
            get
            {
                string value = _Text;
                OnGetText(ref value);
                return value;
            }
            set
            {
                if (_Text != value)
                {
                  OnTextChanging(ref value);
                  ReportPropertyChanging("Text");
                  _Text = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Text");
                  OnTextChanged();
              }
            }
        }
        private string _Text;
        partial void OnGetText(ref string value);
        partial void OnTextChanging(ref string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// There are no comments for ChatBoxID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ChatBoxID
        {
            get
            {
                int? value = _ChatBoxID;
                OnGetChatBoxID(ref value);
                return value;
            }
            set
            {
                if (_ChatBoxID != value)
                {
                  OnChatBoxIDChanging(ref value);
                  ReportPropertyChanging("ChatBoxID");
                  _ChatBoxID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChatBoxID");
                  OnChatBoxIDChanged();
              }
            }
        }
        private int? _ChatBoxID;
        partial void OnGetChatBoxID(ref int? value);
        partial void OnChatBoxIDChanging(ref int? value);
        partial void OnChatBoxIDChanged();
    
        /// <summary>
        /// There are no comments for SenderID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SenderID
        {
            get
            {
                string value = _SenderID;
                OnGetSenderID(ref value);
                return value;
            }
            set
            {
                if (_SenderID != value)
                {
                  OnSenderIDChanging(ref value);
                  ReportPropertyChanging("SenderID");
                  _SenderID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SenderID");
                  OnSenderIDChanged();
              }
            }
        }
        private string _SenderID;
        partial void OnGetSenderID(ref string value);
        partial void OnSenderIDChanging(ref string value);
        partial void OnSenderIDChanged();
    
        /// <summary>
        /// There are no comments for ReceiverID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ReceiverID
        {
            get
            {
                string value = _ReceiverID;
                OnGetReceiverID(ref value);
                return value;
            }
            set
            {
                if (_ReceiverID != value)
                {
                  OnReceiverIDChanging(ref value);
                  ReportPropertyChanging("ReceiverID");
                  _ReceiverID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ReceiverID");
                  OnReceiverIDChanged();
              }
            }
        }
        private string _ReceiverID;
        partial void OnGetReceiverID(ref string value);
        partial void OnReceiverIDChanging(ref string value);
        partial void OnReceiverIDChanged();
    
        /// <summary>
        /// There are no comments for SentDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SentDate
        {
            get
            {
                global::System.DateTime? value = _SentDate;
                OnGetSentDate(ref value);
                return value;
            }
            set
            {
                if (_SentDate != value)
                {
                  OnSentDateChanging(ref value);
                  ReportPropertyChanging("SentDate");
                  _SentDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SentDate");
                  OnSentDateChanged();
              }
            }
        }
        private global::System.DateTime? _SentDate;
        partial void OnGetSentDate(ref global::System.DateTime? value);
        partial void OnSentDateChanging(ref global::System.DateTime? value);
        partial void OnSentDateChanged();
    
        /// <summary>
        /// There are no comments for IsRead in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsRead
        {
            get
            {
                bool? value = _IsRead;
                OnGetIsRead(ref value);
                return value;
            }
            set
            {
                if (_IsRead != value)
                {
                  OnIsReadChanging(ref value);
                  ReportPropertyChanging("IsRead");
                  _IsRead = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsRead");
                  OnIsReadChanged();
              }
            }
        }
        private bool? _IsRead;
        partial void OnGetIsRead(ref bool? value);
        partial void OnIsReadChanging(ref bool? value);
        partial void OnIsReadChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ChatBox in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatChatBox", "ChatBox")]
        public virtual ChatBox ChatBox
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ChatBox>("Xgteamc1XgTeamModel.ChatChatBox", "ChatBox").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ChatBox>("Xgteamc1XgTeamModel.ChatChatBox", "ChatBox").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ChatBox in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChatBox> ChatBoxReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ChatBox>("Xgteamc1XgTeamModel.ChatChatBox", "ChatBox");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ChatBox>("Xgteamc1XgTeamModel.ChatChatBox", "ChatBox", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ChatBox>("Xgteamc1XgTeamModel.ChatChatBox", "ChatBox").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_ReceiverID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatReceiver", "User_ReceiverID")]
        public virtual User User_ReceiverID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatReceiver", "User_ReceiverID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatReceiver", "User_ReceiverID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_ReceiverID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_ReceiverIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatReceiver", "User_ReceiverID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.ChatReceiver", "User_ReceiverID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatReceiver", "User_ReceiverID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_SenderID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatSender", "User_SenderID")]
        public virtual User User_SenderID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatSender", "User_SenderID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatSender", "User_SenderID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_SenderID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_SenderIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatSender", "User_SenderID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.ChatSender", "User_SenderID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.ChatSender", "User_SenderID").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Forum in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ForumID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Forum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Forum : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Forum object.
        /// </summary>
        /// <param name="forumID">Initial value of ForumID.</param>
        public static Forum CreateForum(int forumID)
        {
            Forum forum = new Forum();
            forum.ForumID = forumID;
            return forum;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ForumID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ForumID
        {
            get
            {
                int value = _ForumID;
                OnGetForumID(ref value);
                return value;
            }
            set
            {
                if (_ForumID != value)
                {
                  OnForumIDChanging(ref value);
                  ReportPropertyChanging("ForumID");
                  _ForumID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumID");
                  OnForumIDChanged();
              }
            }
        }
        private int _ForumID;
        partial void OnGetForumID(ref int value);
        partial void OnForumIDChanging(ref int value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// There are no comments for ForumName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumName
        {
            get
            {
                string value = _ForumName;
                OnGetForumName(ref value);
                return value;
            }
            set
            {
                if (_ForumName != value)
                {
                  OnForumNameChanging(ref value);
                  ReportPropertyChanging("ForumName");
                  _ForumName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumName");
                  OnForumNameChanged();
              }
            }
        }
        private string _ForumName;
        partial void OnGetForumName(ref string value);
        partial void OnForumNameChanging(ref string value);
        partial void OnForumNameChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreatedTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedTime
        {
            get
            {
                global::System.DateTime? value = _CreatedTime;
                OnGetCreatedTime(ref value);
                return value;
            }
            set
            {
                if (_CreatedTime != value)
                {
                  OnCreatedTimeChanging(ref value);
                  ReportPropertyChanging("CreatedTime");
                  _CreatedTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedTime");
                  OnCreatedTimeChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedTime;
        partial void OnGetCreatedTime(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanging(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for IsDefault in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDefault
        {
            get
            {
                bool? value = _IsDefault;
                OnGetIsDefault(ref value);
                return value;
            }
            set
            {
                if (_IsDefault != value)
                {
                  OnIsDefaultChanging(ref value);
                  ReportPropertyChanging("IsDefault");
                  _IsDefault = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDefault");
                  OnIsDefaultChanged();
              }
            }
        }
        private bool? _IsDefault;
        partial void OnGetIsDefault(ref bool? value);
        partial void OnIsDefaultChanging(ref bool? value);
        partial void OnIsDefaultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumTopics in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumForumTopic", "ForumTopics")]
        public virtual EntityCollection<ForumTopic> ForumTopics
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumTopic>("Xgteamc1XgTeamModel.ForumForumTopic", "ForumTopics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumTopic>("Xgteamc1XgTeamModel.ForumForumTopic", "ForumTopics", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByForum", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForum", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForum", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForum", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForum", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByForum", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPosts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumPostForum", "ForumPosts")]
        public virtual EntityCollection<ForumPost> ForumPosts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.ForumPostForum", "ForumPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.ForumPostForum", "ForumPosts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Role in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="ıd">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="discriminator">Initial value of Discriminator.</param>
        public static Role CreateRole(string ıd, string name, string discriminator)
        {
            Role role = new Role();
            role.Id = ıd;
            role.Name = name;
            role.Discriminator = discriminator;
            return role;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Discriminator in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Discriminator
        {
            get
            {
                string value = _Discriminator;
                OnGetDiscriminator(ref value);
                return value;
            }
            set
            {
                if (_Discriminator != value)
                {
                  OnDiscriminatorChanging(ref value);
                  ReportPropertyChanging("Discriminator");
                  _Discriminator = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Discriminator");
                  OnDiscriminatorChanged();
              }
            }
        }
        private string _Discriminator = @"";
        partial void OnGetDiscriminator(ref string value);
        partial void OnDiscriminatorChanging(ref string value);
        partial void OnDiscriminatorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserPermissions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RoleModule", "UserPermissions")]
        public virtual EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserPermission>("Xgteamc1XgTeamModel.RoleModule", "UserPermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserPermission>("Xgteamc1XgTeamModel.RoleModule", "UserPermissions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserClaim in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserClaim : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserClaim object.
        /// </summary>
        /// <param name="ıd">Initial value of Id.</param>
        public static UserClaim CreateUserClaim(int ıd)
        {
            UserClaim userClaim = new UserClaim();
            userClaim.Id = ıd;
            return userClaim;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for ClaimType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimType
        {
            get
            {
                string value = _ClaimType;
                OnGetClaimType(ref value);
                return value;
            }
            set
            {
                if (_ClaimType != value)
                {
                  OnClaimTypeChanging(ref value);
                  ReportPropertyChanging("ClaimType");
                  _ClaimType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimType");
                  OnClaimTypeChanged();
              }
            }
        }
        private string _ClaimType;
        partial void OnGetClaimType(ref string value);
        partial void OnClaimTypeChanging(ref string value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// There are no comments for ClaimValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimValue
        {
            get
            {
                string value = _ClaimValue;
                OnGetClaimValue(ref value);
                return value;
            }
            set
            {
                if (_ClaimValue != value)
                {
                  OnClaimValueChanging(ref value);
                  ReportPropertyChanging("ClaimValue");
                  _ClaimValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimValue");
                  OnClaimValueChanged();
              }
            }
        }
        private string _ClaimValue;
        partial void OnGetClaimValue(ref string value);
        partial void OnClaimValueChanging(ref string value);
        partial void OnClaimValueChanged();
    
        /// <summary>
        /// There are no comments for IdentityUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IdentityUserId
        {
            get
            {
                string value = _IdentityUserId;
                OnGetIdentityUserId(ref value);
                return value;
            }
            set
            {
                if (_IdentityUserId != value)
                {
                  OnIdentityUserIdChanging(ref value);
                  ReportPropertyChanging("IdentityUserId");
                  _IdentityUserId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IdentityUserId");
                  OnIdentityUserIdChanged();
              }
            }
        }
        private string _IdentityUserId;
        partial void OnGetIdentityUserId(ref string value);
        partial void OnIdentityUserIdChanging(ref string value);
        partial void OnIdentityUserIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.User in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="ıd">Initial value of Id.</param>
        /// <param name="emailConfirmed">Initial value of EmailConfirmed.</param>
        /// <param name="phoneNumberConfirmed">Initial value of PhoneNumberConfirmed.</param>
        /// <param name="twoFactorEnabled">Initial value of TwoFactorEnabled.</param>
        /// <param name="lockoutEnabled">Initial value of LockoutEnabled.</param>
        /// <param name="accessFailedCount">Initial value of AccessFailedCount.</param>
        /// <param name="userName">Initial value of UserName.</param>
        public static User CreateUser(string ıd, bool emailConfirmed, bool phoneNumberConfirmed, bool twoFactorEnabled, bool lockoutEnabled, int accessFailedCount, string userName)
        {
            User user = new User();
            user.Id = ıd;
            user.EmailConfirmed = emailConfirmed;
            user.PhoneNumberConfirmed = phoneNumberConfirmed;
            user.TwoFactorEnabled = twoFactorEnabled;
            user.LockoutEnabled = lockoutEnabled;
            user.AccessFailedCount = accessFailedCount;
            user.UserName = userName;
            return user;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for EmailConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool EmailConfirmed
        {
            get
            {
                bool value = _EmailConfirmed;
                OnGetEmailConfirmed(ref value);
                return value;
            }
            set
            {
                if (_EmailConfirmed != value)
                {
                  OnEmailConfirmedChanging(ref value);
                  ReportPropertyChanging("EmailConfirmed");
                  _EmailConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmailConfirmed");
                  OnEmailConfirmedChanged();
              }
            }
        }
        private bool _EmailConfirmed;
        partial void OnGetEmailConfirmed(ref bool value);
        partial void OnEmailConfirmedChanging(ref bool value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// There are no comments for PasswordHash in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PasswordHash
        {
            get
            {
                string value = _PasswordHash;
                OnGetPasswordHash(ref value);
                return value;
            }
            set
            {
                if (_PasswordHash != value)
                {
                  OnPasswordHashChanging(ref value);
                  ReportPropertyChanging("PasswordHash");
                  _PasswordHash = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PasswordHash");
                  OnPasswordHashChanged();
              }
            }
        }
        private string _PasswordHash;
        partial void OnGetPasswordHash(ref string value);
        partial void OnPasswordHashChanging(ref string value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// There are no comments for SecurityStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SecurityStamp
        {
            get
            {
                string value = _SecurityStamp;
                OnGetSecurityStamp(ref value);
                return value;
            }
            set
            {
                if (_SecurityStamp != value)
                {
                  OnSecurityStampChanging(ref value);
                  ReportPropertyChanging("SecurityStamp");
                  _SecurityStamp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SecurityStamp");
                  OnSecurityStampChanged();
              }
            }
        }
        private string _SecurityStamp;
        partial void OnGetSecurityStamp(ref string value);
        partial void OnSecurityStampChanging(ref string value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneNumber
        {
            get
            {
                string value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private string _PhoneNumber;
        partial void OnGetPhoneNumber(ref string value);
        partial void OnPhoneNumberChanging(ref string value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumberConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool PhoneNumberConfirmed
        {
            get
            {
                bool value = _PhoneNumberConfirmed;
                OnGetPhoneNumberConfirmed(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumberConfirmed != value)
                {
                  OnPhoneNumberConfirmedChanging(ref value);
                  ReportPropertyChanging("PhoneNumberConfirmed");
                  _PhoneNumberConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumberConfirmed");
                  OnPhoneNumberConfirmedChanged();
              }
            }
        }
        private bool _PhoneNumberConfirmed;
        partial void OnGetPhoneNumberConfirmed(ref bool value);
        partial void OnPhoneNumberConfirmedChanging(ref bool value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// There are no comments for TwoFactorEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool TwoFactorEnabled
        {
            get
            {
                bool value = _TwoFactorEnabled;
                OnGetTwoFactorEnabled(ref value);
                return value;
            }
            set
            {
                if (_TwoFactorEnabled != value)
                {
                  OnTwoFactorEnabledChanging(ref value);
                  ReportPropertyChanging("TwoFactorEnabled");
                  _TwoFactorEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TwoFactorEnabled");
                  OnTwoFactorEnabledChanged();
              }
            }
        }
        private bool _TwoFactorEnabled;
        partial void OnGetTwoFactorEnabled(ref bool value);
        partial void OnTwoFactorEnabledChanging(ref bool value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// There are no comments for LockoutEndDateUtc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LockoutEndDateUtc
        {
            get
            {
                global::System.DateTime? value = _LockoutEndDateUtc;
                OnGetLockoutEndDateUtc(ref value);
                return value;
            }
            set
            {
                if (_LockoutEndDateUtc != value)
                {
                  OnLockoutEndDateUtcChanging(ref value);
                  ReportPropertyChanging("LockoutEndDateUtc");
                  _LockoutEndDateUtc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEndDateUtc");
                  OnLockoutEndDateUtcChanged();
              }
            }
        }
        private global::System.DateTime? _LockoutEndDateUtc;
        partial void OnGetLockoutEndDateUtc(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanging(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// There are no comments for LockoutEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool LockoutEnabled
        {
            get
            {
                bool value = _LockoutEnabled;
                OnGetLockoutEnabled(ref value);
                return value;
            }
            set
            {
                if (_LockoutEnabled != value)
                {
                  OnLockoutEnabledChanging(ref value);
                  ReportPropertyChanging("LockoutEnabled");
                  _LockoutEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEnabled");
                  OnLockoutEnabledChanged();
              }
            }
        }
        private bool _LockoutEnabled;
        partial void OnGetLockoutEnabled(ref bool value);
        partial void OnLockoutEnabledChanging(ref bool value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// There are no comments for AccessFailedCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccessFailedCount
        {
            get
            {
                int value = _AccessFailedCount;
                OnGetAccessFailedCount(ref value);
                return value;
            }
            set
            {
                if (_AccessFailedCount != value)
                {
                  OnAccessFailedCountChanging(ref value);
                  ReportPropertyChanging("AccessFailedCount");
                  _AccessFailedCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessFailedCount");
                  OnAccessFailedCountChanged();
              }
            }
        }
        private int _AccessFailedCount;
        partial void OnGetAccessFailedCount(ref int value);
        partial void OnAccessFailedCountChanging(ref int value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumPostComments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByComment", "ForumPostComments")]
        public virtual EntityCollection<ForumPostComment> ForumPostComments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPostComment>("Xgteamc1XgTeamModel.CreatedByComment", "ForumPostComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPostComment>("Xgteamc1XgTeamModel.CreatedByComment", "ForumPostComments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumTopics in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByForumTopic", "ForumTopics")]
        public virtual EntityCollection<ForumTopic> ForumTopics
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumTopic>("Xgteamc1XgTeamModel.CreatedByForumTopic", "ForumTopics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumTopic>("Xgteamc1XgTeamModel.CreatedByForumTopic", "ForumTopics", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for FriendRequests_FutureFriendID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RequestFutureFriend", "FriendRequests_FutureFriendID")]
        public virtual EntityCollection<FriendRequest> FriendRequests_FutureFriendID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<FriendRequest>("Xgteamc1XgTeamModel.RequestFutureFriend", "FriendRequests_FutureFriendID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<FriendRequest>("Xgteamc1XgTeamModel.RequestFutureFriend", "FriendRequests_FutureFriendID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for FriendRequests_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RequestUser", "FriendRequests_UserID")]
        public virtual EntityCollection<FriendRequest> FriendRequests_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<FriendRequest>("Xgteamc1XgTeamModel.RequestUser", "FriendRequests_UserID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<FriendRequest>("Xgteamc1XgTeamModel.RequestUser", "FriendRequests_UserID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumCommentLikes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentUser", "ForumCommentLikes")]
        public virtual EntityCollection<ForumCommentLike> ForumCommentLikes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumCommentLike>("Xgteamc1XgTeamModel.CommentUser", "ForumCommentLikes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumCommentLike>("Xgteamc1XgTeamModel.CommentUser", "ForumCommentLikes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PortalMessages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserPortalMessage", "PortalMessages")]
        public virtual EntityCollection<PortalMessage> PortalMessages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<PortalMessage>("Xgteamc1XgTeamModel.UserPortalMessage", "PortalMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<PortalMessage>("Xgteamc1XgTeamModel.UserPortalMessage", "PortalMessages", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInfoes_InsertBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserInsertBy", "UserInfoes_InsertBy")]
        public virtual EntityCollection<UserInfoe> UserInfoes_InsertBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserInsertBy", "UserInfoes_InsertBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserInsertBy", "UserInfoes_InsertBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInfoes_LastModifiedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserModifiedBy", "UserInfoes_LastModifiedBy")]
        public virtual EntityCollection<UserInfoe> UserInfoes_LastModifiedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserModifiedBy", "UserInfoes_LastModifiedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInfoe>("Xgteamc1XgTeamModel.UserModifiedBy", "UserInfoes_LastModifiedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInfoe_Id in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "User_Info", "UserInfoe_Id")]
        public virtual UserInfoe UserInfoe_Id
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserInfoe>("Xgteamc1XgTeamModel.User_Info", "UserInfoe_Id").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserInfoe>("Xgteamc1XgTeamModel.User_Info", "UserInfoe_Id").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UserInfoe_Id in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfoe> UserInfoe_IdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserInfoe>("Xgteamc1XgTeamModel.User_Info", "UserInfoe_Id");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UserInfoe>("Xgteamc1XgTeamModel.User_Info", "UserInfoe_Id", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserInfoe>("Xgteamc1XgTeamModel.User_Info", "UserInfoe_Id").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Friends_FutureFriendID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "FriendFutureFriend", "Friends_FutureFriendID")]
        public virtual EntityCollection<Friend> Friends_FutureFriendID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Friend>("Xgteamc1XgTeamModel.FriendFutureFriend", "Friends_FutureFriendID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Friend>("Xgteamc1XgTeamModel.FriendFutureFriend", "Friends_FutureFriendID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Friends_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserID", "Friends_UserID")]
        public virtual EntityCollection<Friend> Friends_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Friend>("Xgteamc1XgTeamModel.UserID", "Friends_UserID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Friend>("Xgteamc1XgTeamModel.UserID", "Friends_UserID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ChatBoxes_ReceiverID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatBoxReceiver", "ChatBoxes_ReceiverID")]
        public virtual EntityCollection<ChatBox> ChatBoxes_ReceiverID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ChatBox>("Xgteamc1XgTeamModel.ChatBoxReceiver", "ChatBoxes_ReceiverID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ChatBox>("Xgteamc1XgTeamModel.ChatBoxReceiver", "ChatBoxes_ReceiverID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ChatBoxes_SenderID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatBoxSender", "ChatBoxes_SenderID")]
        public virtual EntityCollection<ChatBox> ChatBoxes_SenderID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ChatBox>("Xgteamc1XgTeamModel.ChatBoxSender", "ChatBoxes_SenderID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ChatBox>("Xgteamc1XgTeamModel.ChatBoxSender", "ChatBoxes_SenderID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPostLikes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserPostLike", "ForumPostLikes")]
        public virtual EntityCollection<ForumPostLike> ForumPostLikes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPostLike>("Xgteamc1XgTeamModel.UserPostLike", "ForumPostLikes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPostLike>("Xgteamc1XgTeamModel.UserPostLike", "ForumPostLikes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Chats_ReceiverID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatReceiver", "Chats_ReceiverID")]
        public virtual EntityCollection<Chat> Chats_ReceiverID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatReceiver", "Chats_ReceiverID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatReceiver", "Chats_ReceiverID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Chats_SenderID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ChatSender", "Chats_SenderID")]
        public virtual EntityCollection<Chat> Chats_SenderID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatSender", "Chats_SenderID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Chat>("Xgteamc1XgTeamModel.ChatSender", "Chats_SenderID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Fora in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByForum", "Fora")]
        public virtual EntityCollection<Forum> Fora
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Forum>("Xgteamc1XgTeamModel.CreatedByForum", "Fora");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Forum>("Xgteamc1XgTeamModel.CreatedByForum", "Fora", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPosts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByPost", "ForumPosts")]
        public virtual EntityCollection<ForumPost> ForumPosts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.CreatedByPost", "ForumPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPost>("Xgteamc1XgTeamModel.CreatedByPost", "ForumPosts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Notifications in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserNotification", "Notifications")]
        public virtual EntityCollection<Notification> Notifications
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Notification>("Xgteamc1XgTeamModel.UserNotification", "Notifications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Notification>("Xgteamc1XgTeamModel.UserNotification", "Notifications", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProfileVisitors_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "VisitedID", "ProfileVisitors_UserID")]
        public virtual EntityCollection<ProfileVisitor> ProfileVisitors_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProfileVisitor>("Xgteamc1XgTeamModel.VisitedID", "ProfileVisitors_UserID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProfileVisitor>("Xgteamc1XgTeamModel.VisitedID", "ProfileVisitors_UserID", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProfileVisitors_VisitorID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "VisitorId", "ProfileVisitors_VisitorID")]
        public virtual EntityCollection<ProfileVisitor> ProfileVisitors_VisitorID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProfileVisitor>("Xgteamc1XgTeamModel.VisitorId", "ProfileVisitors_VisitorID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProfileVisitor>("Xgteamc1XgTeamModel.VisitorId", "ProfileVisitors_VisitorID", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ForumPost in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ForumPostID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ForumPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumPost : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ForumPost object.
        /// </summary>
        /// <param name="forumPostID">Initial value of ForumPostID.</param>
        public static ForumPost CreateForumPost(int forumPostID)
        {
            ForumPost forumPost = new ForumPost();
            forumPost.ForumPostID = forumPostID;
            return forumPost;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ForumPostID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ForumPostID
        {
            get
            {
                int value = _ForumPostID;
                OnGetForumPostID(ref value);
                return value;
            }
            set
            {
                if (_ForumPostID != value)
                {
                  OnForumPostIDChanging(ref value);
                  ReportPropertyChanging("ForumPostID");
                  _ForumPostID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumPostID");
                  OnForumPostIDChanged();
              }
            }
        }
        private int _ForumPostID;
        partial void OnGetForumPostID(ref int value);
        partial void OnForumPostIDChanging(ref int value);
        partial void OnForumPostIDChanged();
    
        /// <summary>
        /// There are no comments for ForumPostTitle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumPostTitle
        {
            get
            {
                string value = _ForumPostTitle;
                OnGetForumPostTitle(ref value);
                return value;
            }
            set
            {
                if (_ForumPostTitle != value)
                {
                  OnForumPostTitleChanging(ref value);
                  ReportPropertyChanging("ForumPostTitle");
                  _ForumPostTitle = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumPostTitle");
                  OnForumPostTitleChanged();
              }
            }
        }
        private string _ForumPostTitle;
        partial void OnGetForumPostTitle(ref string value);
        partial void OnForumPostTitleChanging(ref string value);
        partial void OnForumPostTitleChanged();
    
        /// <summary>
        /// There are no comments for ForumPostContent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ForumPostContent
        {
            get
            {
                string value = _ForumPostContent;
                OnGetForumPostContent(ref value);
                return value;
            }
            set
            {
                if (_ForumPostContent != value)
                {
                  OnForumPostContentChanging(ref value);
                  ReportPropertyChanging("ForumPostContent");
                  _ForumPostContent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ForumPostContent");
                  OnForumPostContentChanged();
              }
            }
        }
        private string _ForumPostContent;
        partial void OnGetForumPostContent(ref string value);
        partial void OnForumPostContentChanging(ref string value);
        partial void OnForumPostContentChanged();
    
        /// <summary>
        /// There are no comments for CreatedTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedTime
        {
            get
            {
                global::System.DateTime? value = _CreatedTime;
                OnGetCreatedTime(ref value);
                return value;
            }
            set
            {
                if (_CreatedTime != value)
                {
                  OnCreatedTimeChanging(ref value);
                  ReportPropertyChanging("CreatedTime");
                  _CreatedTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedTime");
                  OnCreatedTimeChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedTime;
        partial void OnGetCreatedTime(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanging(ref global::System.DateTime? value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreatedBy
        {
            get
            {
                string value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private string _CreatedBy;
        partial void OnGetCreatedBy(ref string value);
        partial void OnCreatedByChanging(ref string value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for ForumTopicID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ForumTopicID
        {
            get
            {
                int? value = _ForumTopicID;
                OnGetForumTopicID(ref value);
                return value;
            }
            set
            {
                if (_ForumTopicID != value)
                {
                  OnForumTopicIDChanging(ref value);
                  ReportPropertyChanging("ForumTopicID");
                  _ForumTopicID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumTopicID");
                  OnForumTopicIDChanged();
              }
            }
        }
        private int? _ForumTopicID;
        partial void OnGetForumTopicID(ref int? value);
        partial void OnForumTopicIDChanging(ref int? value);
        partial void OnForumTopicIDChanged();
    
        /// <summary>
        /// There are no comments for ForumID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ForumID
        {
            get
            {
                int? value = _ForumID;
                OnGetForumID(ref value);
                return value;
            }
            set
            {
                if (_ForumID != value)
                {
                  OnForumIDChanging(ref value);
                  ReportPropertyChanging("ForumID");
                  _ForumID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForumID");
                  OnForumIDChanged();
              }
            }
        }
        private int? _ForumID;
        partial void OnGetForumID(ref int? value);
        partial void OnForumIDChanging(ref int? value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// There are no comments for ShowInPortal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? ShowInPortal
        {
            get
            {
                bool? value = _ShowInPortal;
                OnGetShowInPortal(ref value);
                return value;
            }
            set
            {
                if (_ShowInPortal != value)
                {
                  OnShowInPortalChanging(ref value);
                  ReportPropertyChanging("ShowInPortal");
                  _ShowInPortal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShowInPortal");
                  OnShowInPortalChanged();
              }
            }
        }
        private bool? _ShowInPortal;
        partial void OnGetShowInPortal(ref bool? value);
        partial void OnShowInPortalChanging(ref bool? value);
        partial void OnShowInPortalChanged();
    
        /// <summary>
        /// There are no comments for PostLocked in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? PostLocked
        {
            get
            {
                bool? value = _PostLocked;
                OnGetPostLocked(ref value);
                return value;
            }
            set
            {
                if (_PostLocked != value)
                {
                  OnPostLockedChanging(ref value);
                  ReportPropertyChanging("PostLocked");
                  _PostLocked = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostLocked");
                  OnPostLockedChanged();
              }
            }
        }
        private bool? _PostLocked;
        partial void OnGetPostLocked(ref bool? value);
        partial void OnPostLockedChanging(ref bool? value);
        partial void OnPostLockedChanged();
    
        /// <summary>
        /// There are no comments for ReviewCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReviewCount
        {
            get
            {
                int? value = _ReviewCount;
                OnGetReviewCount(ref value);
                return value;
            }
            set
            {
                if (_ReviewCount != value)
                {
                  OnReviewCountChanging(ref value);
                  ReportPropertyChanging("ReviewCount");
                  _ReviewCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReviewCount");
                  OnReviewCountChanged();
              }
            }
        }
        private int? _ReviewCount;
        partial void OnGetReviewCount(ref int? value);
        partial void OnReviewCountChanging(ref int? value);
        partial void OnReviewCountChanged();
    
        /// <summary>
        /// There are no comments for IsDefault in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDefault
        {
            get
            {
                bool? value = _IsDefault;
                OnGetIsDefault(ref value);
                return value;
            }
            set
            {
                if (_IsDefault != value)
                {
                  OnIsDefaultChanging(ref value);
                  ReportPropertyChanging("IsDefault");
                  _IsDefault = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDefault");
                  OnIsDefaultChanged();
              }
            }
        }
        private bool? _IsDefault;
        partial void OnGetIsDefault(ref bool? value);
        partial void OnIsDefaultChanging(ref bool? value);
        partial void OnIsDefaultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ForumPostComments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CommentForumPost", "ForumPostComments")]
        public virtual EntityCollection<ForumPostComment> ForumPostComments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPostComment>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPostComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPostComment>("Xgteamc1XgTeamModel.CommentForumPost", "ForumPostComments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumPostLikes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "PostLikeForum", "ForumPostLikes")]
        public virtual EntityCollection<ForumPostLike> ForumPostLikes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ForumPostLike>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPostLikes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ForumPostLike>("Xgteamc1XgTeamModel.PostLikeForum", "ForumPostLikes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "CreatedByPost", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByPost", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByPost", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByPost", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByPost", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.CreatedByPost", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Forum in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumPostForum", "Forum")]
        public virtual Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumPostForum", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumPostForum", "Forum").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Forum in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumPostForum", "Forum");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumPostForum", "Forum", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Forum>("Xgteamc1XgTeamModel.ForumPostForum", "Forum").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ForumTopic in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "ForumPostForumTopic", "ForumTopic")]
        public virtual ForumTopic ForumTopic
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumTopic>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumTopic").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumTopic>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumTopic").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ForumTopic in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForumTopic> ForumTopicReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumTopic>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumTopic");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ForumTopic>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumTopic", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ForumTopic>("Xgteamc1XgTeamModel.ForumPostForumTopic", "ForumTopic").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Module in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Module object.
        /// </summary>
        /// <param name="ıD">Initial value of ID.</param>
        public static Module CreateModule(int ıD)
        {
            Module module = new Module();
            module.ID = ıD;
            return module;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for DisplayOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DisplayOrder
        {
            get
            {
                int? value = _DisplayOrder;
                OnGetDisplayOrder(ref value);
                return value;
            }
            set
            {
                if (_DisplayOrder != value)
                {
                  OnDisplayOrderChanging(ref value);
                  ReportPropertyChanging("DisplayOrder");
                  _DisplayOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DisplayOrder");
                  OnDisplayOrderChanged();
              }
            }
        }
        private int? _DisplayOrder;
        partial void OnGetDisplayOrder(ref int? value);
        partial void OnDisplayOrderChanging(ref int? value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// There are no comments for ModuleName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ModuleName
        {
            get
            {
                string value = _ModuleName;
                OnGetModuleName(ref value);
                return value;
            }
            set
            {
                if (_ModuleName != value)
                {
                  OnModuleNameChanging(ref value);
                  ReportPropertyChanging("ModuleName");
                  _ModuleName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ModuleName");
                  OnModuleNameChanged();
              }
            }
        }
        private string _ModuleName;
        partial void OnGetModuleName(ref string value);
        partial void OnModuleNameChanging(ref string value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// There are no comments for PageIcon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PageIcon
        {
            get
            {
                string value = _PageIcon;
                OnGetPageIcon(ref value);
                return value;
            }
            set
            {
                if (_PageIcon != value)
                {
                  OnPageIconChanging(ref value);
                  ReportPropertyChanging("PageIcon");
                  _PageIcon = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PageIcon");
                  OnPageIconChanged();
              }
            }
        }
        private string _PageIcon;
        partial void OnGetPageIcon(ref string value);
        partial void OnPageIconChanging(ref string value);
        partial void OnPageIconChanged();
    
        /// <summary>
        /// There are no comments for PageUrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PageUrl
        {
            get
            {
                string value = _PageUrl;
                OnGetPageUrl(ref value);
                return value;
            }
            set
            {
                if (_PageUrl != value)
                {
                  OnPageUrlChanging(ref value);
                  ReportPropertyChanging("PageUrl");
                  _PageUrl = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PageUrl");
                  OnPageUrlChanged();
              }
            }
        }
        private string _PageUrl;
        partial void OnGetPageUrl(ref string value);
        partial void OnPageUrlChanging(ref string value);
        partial void OnPageUrlChanged();
    
        /// <summary>
        /// There are no comments for PageSlug in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PageSlug
        {
            get
            {
                string value = _PageSlug;
                OnGetPageSlug(ref value);
                return value;
            }
            set
            {
                if (_PageSlug != value)
                {
                  OnPageSlugChanging(ref value);
                  ReportPropertyChanging("PageSlug");
                  _PageSlug = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PageSlug");
                  OnPageSlugChanged();
              }
            }
        }
        private string _PageSlug;
        partial void OnGetPageSlug(ref string value);
        partial void OnPageSlugChanging(ref string value);
        partial void OnPageSlugChanged();
    
        /// <summary>
        /// There are no comments for IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDeleted
        {
            get
            {
                bool? value = _IsDeleted;
                OnGetIsDeleted(ref value);
                return value;
            }
            set
            {
                if (_IsDeleted != value)
                {
                  OnIsDeletedChanging(ref value);
                  ReportPropertyChanging("IsDeleted");
                  _IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDeleted");
                  OnIsDeletedChanged();
              }
            }
        }
        private bool? _IsDeleted;
        partial void OnGetIsDeleted(ref bool? value);
        partial void OnIsDeletedChanging(ref bool? value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// There are no comments for IsActive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsActive
        {
            get
            {
                bool? value = _IsActive;
                OnGetIsActive(ref value);
                return value;
            }
            set
            {
                if (_IsActive != value)
                {
                  OnIsActiveChanging(ref value);
                  ReportPropertyChanging("IsActive");
                  _IsActive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsActive");
                  OnIsActiveChanged();
              }
            }
        }
        private bool? _IsActive;
        partial void OnGetIsActive(ref bool? value);
        partial void OnIsActiveChanging(ref bool? value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// There are no comments for IsDefault in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsDefault
        {
            get
            {
                bool? value = _IsDefault;
                OnGetIsDefault(ref value);
                return value;
            }
            set
            {
                if (_IsDefault != value)
                {
                  OnIsDefaultChanging(ref value);
                  ReportPropertyChanging("IsDefault");
                  _IsDefault = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDefault");
                  OnIsDefaultChanged();
              }
            }
        }
        private bool? _IsDefault;
        partial void OnGetIsDefault(ref bool? value);
        partial void OnIsDefaultChanging(ref bool? value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// There are no comments for ParentModuleID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentModuleID
        {
            get
            {
                int? value = _ParentModuleID;
                OnGetParentModuleID(ref value);
                return value;
            }
            set
            {
                if (_ParentModuleID != value)
                {
                  OnParentModuleIDChanging(ref value);
                  ReportPropertyChanging("ParentModuleID");
                  _ParentModuleID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentModuleID");
                  OnParentModuleIDChanged();
              }
            }
        }
        private int? _ParentModuleID;
        partial void OnGetParentModuleID(ref int? value);
        partial void OnParentModuleIDChanging(ref int? value);
        partial void OnParentModuleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserPermissions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "PermissionModule", "UserPermissions")]
        public virtual EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserPermission>("Xgteamc1XgTeamModel.PermissionModule", "UserPermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserPermission>("Xgteamc1XgTeamModel.PermissionModule", "UserPermissions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.Notification in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NotificationID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="notificationID">Initial value of NotificationID.</param>
        public static Notification CreateNotification(int notificationID)
        {
            Notification notification = new Notification();
            notification.NotificationID = notificationID;
            return notification;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NotificationID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NotificationID
        {
            get
            {
                int value = _NotificationID;
                OnGetNotificationID(ref value);
                return value;
            }
            set
            {
                if (_NotificationID != value)
                {
                  OnNotificationIDChanging(ref value);
                  ReportPropertyChanging("NotificationID");
                  _NotificationID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotificationID");
                  OnNotificationIDChanged();
              }
            }
        }
        private int _NotificationID;
        partial void OnGetNotificationID(ref int value);
        partial void OnNotificationIDChanging(ref int value);
        partial void OnNotificationIDChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Type
        {
            get
            {
                int? value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private int? _Type;
        partial void OnGetType(ref int? value);
        partial void OnTypeChanging(ref int? value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Details
        {
            get
            {
                string value = _Details;
                OnGetDetails(ref value);
                return value;
            }
            set
            {
                if (_Details != value)
                {
                  OnDetailsChanging(ref value);
                  ReportPropertyChanging("Details");
                  _Details = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Details");
                  OnDetailsChanged();
              }
            }
        }
        private string _Details;
        partial void OnGetDetails(ref string value);
        partial void OnDetailsChanging(ref string value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for DetailsUrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DetailsUrl
        {
            get
            {
                string value = _DetailsUrl;
                OnGetDetailsUrl(ref value);
                return value;
            }
            set
            {
                if (_DetailsUrl != value)
                {
                  OnDetailsUrlChanging(ref value);
                  ReportPropertyChanging("DetailsUrl");
                  _DetailsUrl = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DetailsUrl");
                  OnDetailsUrlChanged();
              }
            }
        }
        private string _DetailsUrl;
        partial void OnGetDetailsUrl(ref string value);
        partial void OnDetailsUrlChanging(ref string value);
        partial void OnDetailsUrlChanged();
    
        /// <summary>
        /// There are no comments for SentTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SentTo
        {
            get
            {
                string value = _SentTo;
                OnGetSentTo(ref value);
                return value;
            }
            set
            {
                if (_SentTo != value)
                {
                  OnSentToChanging(ref value);
                  ReportPropertyChanging("SentTo");
                  _SentTo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SentTo");
                  OnSentToChanged();
              }
            }
        }
        private string _SentTo;
        partial void OnGetSentTo(ref string value);
        partial void OnSentToChanging(ref string value);
        partial void OnSentToChanged();
    
        /// <summary>
        /// There are no comments for CreatedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreatedDate
        {
            get
            {
                global::System.DateTime? value = _CreatedDate;
                OnGetCreatedDate(ref value);
                return value;
            }
            set
            {
                if (_CreatedDate != value)
                {
                  OnCreatedDateChanging(ref value);
                  ReportPropertyChanging("CreatedDate");
                  _CreatedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedDate");
                  OnCreatedDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreatedDate;
        partial void OnGetCreatedDate(ref global::System.DateTime? value);
        partial void OnCreatedDateChanging(ref global::System.DateTime? value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// There are no comments for IsRead in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual bool? IsRead
        {
            get
            {
                bool? value = _IsRead;
                OnGetIsRead(ref value);
                return value;
            }
            set
            {
                if (_IsRead != value)
                {
                  OnIsReadChanging(ref value);
                  ReportPropertyChanging("IsRead");
                  _IsRead = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsRead");
                  OnIsReadChanged();
              }
            }
        }
        private bool? _IsRead;
        partial void OnGetIsRead(ref bool? value);
        partial void OnIsReadChanging(ref bool? value);
        partial void OnIsReadChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "UserNotification", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserNotification", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserNotification", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserNotification", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.UserNotification", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.UserNotification", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserPermission in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPermission : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserPermission object.
        /// </summary>
        /// <param name="ıD">Initial value of ID.</param>
        public static UserPermission CreateUserPermission(int ıD)
        {
            UserPermission userPermission = new UserPermission();
            userPermission.ID = ıD;
            return userPermission;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for ModuleID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ModuleID
        {
            get
            {
                int? value = _ModuleID;
                OnGetModuleID(ref value);
                return value;
            }
            set
            {
                if (_ModuleID != value)
                {
                  OnModuleIDChanging(ref value);
                  ReportPropertyChanging("ModuleID");
                  _ModuleID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModuleID");
                  OnModuleIDChanged();
              }
            }
        }
        private int? _ModuleID;
        partial void OnGetModuleID(ref int? value);
        partial void OnModuleIDChanging(ref int? value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// There are no comments for RoleID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RoleID
        {
            get
            {
                string value = _RoleID;
                OnGetRoleID(ref value);
                return value;
            }
            set
            {
                if (_RoleID != value)
                {
                  OnRoleIDChanging(ref value);
                  ReportPropertyChanging("RoleID");
                  _RoleID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RoleID");
                  OnRoleIDChanged();
              }
            }
        }
        private string _RoleID;
        partial void OnGetRoleID(ref string value);
        partial void OnRoleIDChanging(ref string value);
        partial void OnRoleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Module in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "PermissionModule", "Module")]
        public virtual Module Module
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Module>("Xgteamc1XgTeamModel.PermissionModule", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Module>("Xgteamc1XgTeamModel.PermissionModule", "Module").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Module in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Module>("Xgteamc1XgTeamModel.PermissionModule", "Module");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Module>("Xgteamc1XgTeamModel.PermissionModule", "Module", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Module>("Xgteamc1XgTeamModel.PermissionModule", "Module").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Role in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "RoleModule", "Role")]
        public virtual Role Role
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Role>("Xgteamc1XgTeamModel.RoleModule", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Role>("Xgteamc1XgTeamModel.RoleModule", "Role").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Role in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Role>("Xgteamc1XgTeamModel.RoleModule", "Role");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Role>("Xgteamc1XgTeamModel.RoleModule", "Role", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Role>("Xgteamc1XgTeamModel.RoleModule", "Role").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.UserRole in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UserId
    /// RoleId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="roleId">Initial value of RoleId.</param>
        /// <param name="discriminator">Initial value of Discriminator.</param>
        public static UserRole CreateUserRole(string userId, string roleId, string discriminator)
        {
            UserRole userRole = new UserRole();
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            userRole.Discriminator = discriminator;
            return userRole;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RoleId
        {
            get
            {
                string value = _RoleId;
                OnGetRoleId(ref value);
                return value;
            }
            set
            {
                if (_RoleId != value)
                {
                  OnRoleIdChanging(ref value);
                  ReportPropertyChanging("RoleId");
                  _RoleId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RoleId");
                  OnRoleIdChanged();
              }
            }
        }
        private string _RoleId;
        partial void OnGetRoleId(ref string value);
        partial void OnRoleIdChanging(ref string value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// There are no comments for IdentityUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IdentityUserId
        {
            get
            {
                string value = _IdentityUserId;
                OnGetIdentityUserId(ref value);
                return value;
            }
            set
            {
                if (_IdentityUserId != value)
                {
                  OnIdentityUserIdChanging(ref value);
                  ReportPropertyChanging("IdentityUserId");
                  _IdentityUserId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IdentityUserId");
                  OnIdentityUserIdChanged();
              }
            }
        }
        private string _IdentityUserId;
        partial void OnGetIdentityUserId(ref string value);
        partial void OnIdentityUserIdChanging(ref string value);
        partial void OnIdentityUserIdChanged();
    
        /// <summary>
        /// There are no comments for Discriminator in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Discriminator
        {
            get
            {
                string value = _Discriminator;
                OnGetDiscriminator(ref value);
                return value;
            }
            set
            {
                if (_Discriminator != value)
                {
                  OnDiscriminatorChanging(ref value);
                  ReportPropertyChanging("Discriminator");
                  _Discriminator = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Discriminator");
                  OnDiscriminatorChanged();
              }
            }
        }
        private string _Discriminator = @"";
        partial void OnGetDiscriminator(ref string value);
        partial void OnDiscriminatorChanging(ref string value);
        partial void OnDiscriminatorChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Xgteamc1XgTeamModel.ProfileVisitor in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Xgteamc1XgTeamModel", Name="ProfileVisitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProfileVisitor : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProfileVisitor object.
        /// </summary>
        /// <param name="ıd">Initial value of Id.</param>
        public static ProfileVisitor CreateProfileVisitor(int ıd)
        {
            ProfileVisitor profileVisitor = new ProfileVisitor();
            profileVisitor.Id = ıd;
            return profileVisitor;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for VisitorID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VisitorID
        {
            get
            {
                string value = _VisitorID;
                OnGetVisitorID(ref value);
                return value;
            }
            set
            {
                if (_VisitorID != value)
                {
                  OnVisitorIDChanging(ref value);
                  ReportPropertyChanging("VisitorID");
                  _VisitorID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VisitorID");
                  OnVisitorIDChanged();
              }
            }
        }
        private string _VisitorID;
        partial void OnGetVisitorID(ref string value);
        partial void OnVisitorIDChanging(ref string value);
        partial void OnVisitorIDChanged();
    
        /// <summary>
        /// There are no comments for VisitedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? VisitedDate
        {
            get
            {
                global::System.DateTime? value = _VisitedDate;
                OnGetVisitedDate(ref value);
                return value;
            }
            set
            {
                if (_VisitedDate != value)
                {
                  OnVisitedDateChanging(ref value);
                  ReportPropertyChanging("VisitedDate");
                  _VisitedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VisitedDate");
                  OnVisitedDateChanged();
              }
            }
        }
        private global::System.DateTime? _VisitedDate;
        partial void OnGetVisitedDate(ref global::System.DateTime? value);
        partial void OnVisitedDateChanging(ref global::System.DateTime? value);
        partial void OnVisitedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "VisitedID", "User_UserID")]
        public virtual User User_UserID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitedID", "User_UserID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitedID", "User_UserID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_UserIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitedID", "User_UserID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.VisitedID", "User_UserID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitedID", "User_UserID").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_VisitorID in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Xgteamc1XgTeamModel", "VisitorId", "User_VisitorID")]
        public virtual User User_VisitorID
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitorId", "User_VisitorID").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitorId", "User_VisitorID").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_VisitorID in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_VisitorIDReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitorId", "User_VisitorID");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Xgteamc1XgTeamModel.VisitorId", "User_VisitorID", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Xgteamc1XgTeamModel.VisitorId", "User_VisitorID").Value = null;
                }
            }
        }

        #endregion
    }

}
